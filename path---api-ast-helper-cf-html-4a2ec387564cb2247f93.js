webpackJsonp([332],{"./node_modules/json-loader/index.js!./.cache/json/api-ast-helper-cf-html.json":function(e,s){e.exports={data:{file:{relativePath:"api/Ast_helper.Cf.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="Ast_helper.Cl.html" title="Ast_helper.Cl">Previous</a>\n&#xA0;<a class="up" href="Ast_helper.html" title="Ast_helper">Up</a>\n&#xA0;<a class="post" href="Ast_helper.Ci.html" title="Ast_helper.Ci">Next</a>\n</div>\n<h1>Module <a href="type_Ast_helper.Cf.html">Ast_helper.Cf</a></h1>\n\n<pre><span class="keyword">module</span> Cf: sig .. end</pre><div class="info module top">\nClass fields<br>\n</div>\n<hr width="100%">\n\n<pre id="VALmk"><span class="keyword">let</span> mk:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    ~docs: Docstrings.docs=?,\n    Parsetree.class_field_desc\n  ) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALattr"><span class="keyword">let</span> attr: (Parsetree.class_field, Parsetree.attribute) =&gt; Parsetree.class_field;\n</pre>\n<pre id="VALinherit_"><span class="keyword">let</span> inherit_:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Asttypes.override_flag,\n    Parsetree.class_expr,\n    option(string)\n  ) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALval_"><span class="keyword">let</span> val_:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Ast_helper.str,\n    Asttypes.mutable_flag,\n    Parsetree.class_field_kind\n  ) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALmethod_"><span class="keyword">let</span> method:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Ast_helper.str,\n    Asttypes.private_flag,\n    Parsetree.class_field_kind\n  ) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALconstraint_"><span class="keyword">let</span> constraint_:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.core_type, Parsetree.core_type) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALinitializer_"><span class="keyword">let</span> initializer_:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.expression) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALextension"><span class="keyword">let</span> extension:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.extension) =&gt;\n  Parsetree.class_field;\n</pre>\n<pre id="VALattribute"><span class="keyword">let</span> attribute: (~loc: Ast_helper.loc=?, Parsetree.attribute) =&gt; Parsetree.class_field;\n</pre>\n<pre id="VALtext"><span class="keyword">let</span> text: Docstrings.text =&gt; list(Parsetree.class_field);\n</pre>\n<pre id="VALvirtual_"><span class="keyword">let</span> virtual_: Parsetree.core_type =&gt; Parsetree.class_field_kind;\n</pre>\n<pre id="VALconcrete"><span class="keyword">let</span> concrete: (Asttypes.override_flag, Parsetree.expression) =&gt; Parsetree.class_field_kind;\n</pre></div>'}}},pathContext:{relativePath:"api/Ast_helper.Cf.html"}}}});
//# sourceMappingURL=path---api-ast-helper-cf-html-4a2ec387564cb2247f93.js.map