{"version":3,"sources":["webpack:///path---api-docstrings-html-261f0ee1a1019f325d2f.js","webpack:///./.cache/json/api-docstrings-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-docstrings-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,6EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,sBACAC,cACAC,QAAA,kiPAIAC,aACAH,aAAA","file":"path---api-docstrings-html-261f0ee1a1019f325d2f.js","sourcesContent":["webpackJsonp([289],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-docstrings-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Docstrings.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Asttypes.html\\\" title=\\\"Asttypes\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Lexer.html\\\" title=\\\"Lexer\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Docstrings.html\\\">Docstrings</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Docstrings: sig .. end</pre><div class=\\\"info module top\\\">\\n(Re)Initialise all docstring state<br>\\n</div>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"VALinit\\\">val init : unit -&gt; unit</pre>\\n<pre id=\\\"VALwarn_bad_docstrings\\\">val warn_bad_docstrings : unit -&gt; unit</pre><div class=\\\"info \\\">\\nEmit warnings for unattached and ambiguous docstrings<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Docstrings\\\">Docstrings</h3><br>\\n\\n<pre id=\\\"TYPEdocstring\\\"><span class=\\\"keyword\\\">type</span> docstring </pre>\\n<div class=\\\"info \\\">\\nDocumentation comments<br>\\n</div>\\n\\n\\n<pre id=\\\"VALdocstring\\\">val docstring : string -&gt; Location.t -&gt; docstring</pre><div class=\\\"info \\\">\\nCreate a docstring<br>\\n</div>\\n\\n<pre id=\\\"VALdocstring_body\\\">val docstring_body : docstring -&gt; string</pre><div class=\\\"info \\\">\\nGet the text of a docstring<br>\\n</div>\\n\\n<pre id=\\\"VALdocstring_loc\\\">val docstring_loc : docstring -&gt; Location.t</pre><div class=\\\"info \\\">\\nGet the location of a docstring<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Setfunctions\\\">Set functions</h3>\\n<p>\\n\\n   These functions are used by the lexer to associate docstrings to\\n   the locations of tokens.<br>\\n\\n</p><pre id=\\\"VALset_pre_docstrings\\\">val set_pre_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately preceding a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_post_docstrings\\\">val set_post_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately following a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_floating_docstrings\\\">val set_floating_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings not immediately adjacent to a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_pre_extra_docstrings\\\">val set_pre_extra_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately following the token which precedes this one<br>\\n</div>\\n\\n<pre id=\\\"VALset_post_extra_docstrings\\\">val set_post_extra_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately preceding the token which follows this one<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Items\\\">Items</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEdocs\\\"><code class=\\\"code\\\">Docstrings.docs</code></a> type represents documentation attached to an item.<br>\\n\\n</p><pre><span class=\\\"keyword\\\">type</span> docs = {</pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>docs_pre&#xA0;: docstring option;</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>docs_post&#xA0;: docstring option;</code></td>\\n\\n</tr></tbody></table>\\n}\\n\\n\\n\\n<pre id=\\\"VALempty_docs\\\">val empty_docs : docs</pre>\\n<pre id=\\\"VALdocs_attr\\\">val docs_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_docs_attrs\\\">val add_docs_attrs : docs -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert item documentation to attributes and add them to an\\n    attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_docs\\\">val symbol_docs : unit -&gt; docs</pre><div class=\\\"info \\\">\\nFetch the item documentation for the current symbol. This also\\n    marks this documentation (for ambiguity warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_docs_lazy\\\">val symbol_docs_lazy : unit -&gt; docs Lazy.t</pre>\\n<pre id=\\\"VALrhs_docs\\\">val rhs_docs : int -&gt; int -&gt; docs</pre><div class=\\\"info \\\">\\nFetch the item documentation for the symbols between two\\n    positions. This also marks this documentation (for ambiguity\\n    warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_docs_lazy\\\">val rhs_docs_lazy : int -&gt; int -&gt; docs Lazy.t</pre>\\n<pre id=\\\"VALmark_symbol_docs\\\">val mark_symbol_docs : unit -&gt; unit</pre><div class=\\\"info \\\">\\nMark the item documentation for the current symbol (for ambiguity\\n    warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALmark_rhs_docs\\\">val mark_rhs_docs : int -&gt; int -&gt; unit</pre><div class=\\\"info \\\">\\nMark as associated the item documentation for the symbols between\\n    two positions (for ambiguity warnings)<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Fieldsandconstructors\\\">Fields and constructors</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEinfo\\\"><code class=\\\"code\\\">Docstrings.info</code></a> type represents documentation attached to a field or\\n    constructor.<br>\\n\\n</p><pre id=\\\"TYPEinfo\\\"><span class=\\\"keyword\\\">type</span> info = docstring option </pre>\\n\\n\\n<pre id=\\\"VALempty_info\\\">val empty_info : info</pre>\\n<pre id=\\\"VALinfo_attr\\\">val info_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_info_attrs\\\">val add_info_attrs : info -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert field info to attributes and add them to an\\n    attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_info\\\">val symbol_info : unit -&gt; info</pre><div class=\\\"info \\\">\\nFetch the field info for the current symbol.<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_info\\\">val rhs_info : int -&gt; info</pre><div class=\\\"info \\\">\\nFetch the field info following the symbol at a given position.<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Unattachedcomments\\\">Unattached comments</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEtext\\\"><code class=\\\"code\\\">Docstrings.text</code></a> type represents documentation which is not attached to\\n    anything.<br>\\n\\n</p><pre id=\\\"TYPEtext\\\"><span class=\\\"keyword\\\">type</span> text = docstring list </pre>\\n\\n\\n<pre id=\\\"VALempty_text\\\">val empty_text : text</pre>\\n<pre id=\\\"VALtext_attr\\\">val text_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_text_attrs\\\">val add_text_attrs : text -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert text to attributes and add them to an attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_text\\\">val symbol_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch the text preceding the current symbol.<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_text_lazy\\\">val symbol_text_lazy : unit -&gt; text Lazy.t</pre>\\n<pre id=\\\"VALrhs_text\\\">val rhs_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch the text preceding the symbol at the given position.<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_text_lazy\\\">val rhs_text_lazy : int -&gt; text Lazy.t</pre><br>\\n<h3 id=\\\"3_Extratext\\\">Extra text</h3>\\n<p>\\n\\n    There may be additional text attached to the delimiters of a block\\n    (e.g. <code class=\\\"code\\\">struct</code> and <code class=\\\"code\\\">end</code>). This is fetched by the following\\n    functions, which are applied to the contents of the block rather\\n    than the delimiters.<br>\\n\\n</p><pre id=\\\"VALsymbol_pre_extra_text\\\">val symbol_pre_extra_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text preceding the current symbol<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_post_extra_text\\\">val symbol_post_extra_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text following the current symbol<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_pre_extra_text\\\">val rhs_pre_extra_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text preceding the symbol at the given position<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_post_extra_text\\\">val rhs_post_extra_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text following the symbol at the given position<br>\\n</div>\\n</div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Docstrings.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-docstrings-html-261f0ee1a1019f325d2f.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Docstrings.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Asttypes.html\\\" title=\\\"Asttypes\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Lexer.html\\\" title=\\\"Lexer\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Docstrings.html\\\">Docstrings</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Docstrings: sig .. end</pre><div class=\\\"info module top\\\">\\n(Re)Initialise all docstring state<br>\\n</div>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"VALinit\\\">val init : unit -&gt; unit</pre>\\n<pre id=\\\"VALwarn_bad_docstrings\\\">val warn_bad_docstrings : unit -&gt; unit</pre><div class=\\\"info \\\">\\nEmit warnings for unattached and ambiguous docstrings<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Docstrings\\\">Docstrings</h3><br>\\n\\n<pre id=\\\"TYPEdocstring\\\"><span class=\\\"keyword\\\">type</span> docstring </pre>\\n<div class=\\\"info \\\">\\nDocumentation comments<br>\\n</div>\\n\\n\\n<pre id=\\\"VALdocstring\\\">val docstring : string -&gt; Location.t -&gt; docstring</pre><div class=\\\"info \\\">\\nCreate a docstring<br>\\n</div>\\n\\n<pre id=\\\"VALdocstring_body\\\">val docstring_body : docstring -&gt; string</pre><div class=\\\"info \\\">\\nGet the text of a docstring<br>\\n</div>\\n\\n<pre id=\\\"VALdocstring_loc\\\">val docstring_loc : docstring -&gt; Location.t</pre><div class=\\\"info \\\">\\nGet the location of a docstring<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Setfunctions\\\">Set functions</h3>\\n<p>\\n\\n   These functions are used by the lexer to associate docstrings to\\n   the locations of tokens.<br>\\n\\n</p><pre id=\\\"VALset_pre_docstrings\\\">val set_pre_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately preceding a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_post_docstrings\\\">val set_post_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately following a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_floating_docstrings\\\">val set_floating_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings not immediately adjacent to a token<br>\\n</div>\\n\\n<pre id=\\\"VALset_pre_extra_docstrings\\\">val set_pre_extra_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately following the token which precedes this one<br>\\n</div>\\n\\n<pre id=\\\"VALset_post_extra_docstrings\\\">val set_post_extra_docstrings : Lexing.position -&gt; docstring list -&gt; unit</pre><div class=\\\"info \\\">\\nDocstrings immediately preceding the token which follows this one<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Items\\\">Items</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEdocs\\\"><code class=\\\"code\\\">Docstrings.docs</code></a> type represents documentation attached to an item.<br>\\n\\n</p><pre><span class=\\\"keyword\\\">type</span> docs = {</pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>docs_pre&#xA0;: docstring option;</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>docs_post&#xA0;: docstring option;</code></td>\\n\\n</tr></tbody></table>\\n}\\n\\n\\n\\n<pre id=\\\"VALempty_docs\\\">val empty_docs : docs</pre>\\n<pre id=\\\"VALdocs_attr\\\">val docs_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_docs_attrs\\\">val add_docs_attrs : docs -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert item documentation to attributes and add them to an\\n    attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_docs\\\">val symbol_docs : unit -&gt; docs</pre><div class=\\\"info \\\">\\nFetch the item documentation for the current symbol. This also\\n    marks this documentation (for ambiguity warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_docs_lazy\\\">val symbol_docs_lazy : unit -&gt; docs Lazy.t</pre>\\n<pre id=\\\"VALrhs_docs\\\">val rhs_docs : int -&gt; int -&gt; docs</pre><div class=\\\"info \\\">\\nFetch the item documentation for the symbols between two\\n    positions. This also marks this documentation (for ambiguity\\n    warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_docs_lazy\\\">val rhs_docs_lazy : int -&gt; int -&gt; docs Lazy.t</pre>\\n<pre id=\\\"VALmark_symbol_docs\\\">val mark_symbol_docs : unit -&gt; unit</pre><div class=\\\"info \\\">\\nMark the item documentation for the current symbol (for ambiguity\\n    warnings).<br>\\n</div>\\n\\n<pre id=\\\"VALmark_rhs_docs\\\">val mark_rhs_docs : int -&gt; int -&gt; unit</pre><div class=\\\"info \\\">\\nMark as associated the item documentation for the symbols between\\n    two positions (for ambiguity warnings)<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Fieldsandconstructors\\\">Fields and constructors</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEinfo\\\"><code class=\\\"code\\\">Docstrings.info</code></a> type represents documentation attached to a field or\\n    constructor.<br>\\n\\n</p><pre id=\\\"TYPEinfo\\\"><span class=\\\"keyword\\\">type</span> info = docstring option </pre>\\n\\n\\n<pre id=\\\"VALempty_info\\\">val empty_info : info</pre>\\n<pre id=\\\"VALinfo_attr\\\">val info_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_info_attrs\\\">val add_info_attrs : info -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert field info to attributes and add them to an\\n    attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_info\\\">val symbol_info : unit -&gt; info</pre><div class=\\\"info \\\">\\nFetch the field info for the current symbol.<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_info\\\">val rhs_info : int -&gt; info</pre><div class=\\\"info \\\">\\nFetch the field info following the symbol at a given position.<br>\\n</div>\\n<br>\\n<h3 id=\\\"3_Unattachedcomments\\\">Unattached comments</h3>\\n<p>\\n\\n    The <a href=\\\"Docstrings.html#TYPEtext\\\"><code class=\\\"code\\\">Docstrings.text</code></a> type represents documentation which is not attached to\\n    anything.<br>\\n\\n</p><pre id=\\\"TYPEtext\\\"><span class=\\\"keyword\\\">type</span> text = docstring list </pre>\\n\\n\\n<pre id=\\\"VALempty_text\\\">val empty_text : text</pre>\\n<pre id=\\\"VALtext_attr\\\">val text_attr : docstring -&gt; Parsetree.attribute</pre>\\n<pre id=\\\"VALadd_text_attrs\\\">val add_text_attrs : text -&gt; Parsetree.attributes -&gt; Parsetree.attributes</pre><div class=\\\"info \\\">\\nConvert text to attributes and add them to an attribute list<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_text\\\">val symbol_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch the text preceding the current symbol.<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_text_lazy\\\">val symbol_text_lazy : unit -&gt; text Lazy.t</pre>\\n<pre id=\\\"VALrhs_text\\\">val rhs_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch the text preceding the symbol at the given position.<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_text_lazy\\\">val rhs_text_lazy : int -&gt; text Lazy.t</pre><br>\\n<h3 id=\\\"3_Extratext\\\">Extra text</h3>\\n<p>\\n\\n    There may be additional text attached to the delimiters of a block\\n    (e.g. <code class=\\\"code\\\">struct</code> and <code class=\\\"code\\\">end</code>). This is fetched by the following\\n    functions, which are applied to the contents of the block rather\\n    than the delimiters.<br>\\n\\n</p><pre id=\\\"VALsymbol_pre_extra_text\\\">val symbol_pre_extra_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text preceding the current symbol<br>\\n</div>\\n\\n<pre id=\\\"VALsymbol_post_extra_text\\\">val symbol_post_extra_text : unit -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text following the current symbol<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_pre_extra_text\\\">val rhs_pre_extra_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text preceding the symbol at the given position<br>\\n</div>\\n\\n<pre id=\\\"VALrhs_post_extra_text\\\">val rhs_post_extra_text : int -&gt; text</pre><div class=\\\"info \\\">\\nFetch additional text following the symbol at the given position<br>\\n</div>\\n</div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Docstrings.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-docstrings-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-docstrings-html.json\n// module chunks = 289"],"sourceRoot":""}