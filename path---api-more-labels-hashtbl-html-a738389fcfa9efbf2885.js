webpackJsonp([251],{"./node_modules/json-loader/index.js!./.cache/json/api-more-labels-hashtbl-html.json":function(a,e){a.exports={data:{file:{relativePath:"api/MoreLabels.Hashtbl.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar">&#xA0;<a class="up" href="MoreLabels.html" title="MoreLabels">Up</a>\n&#xA0;<a class="post" href="MoreLabels.Map.html" title="MoreLabels.Map">Next</a>\n</div>\n<h1>Module <a href="type_MoreLabels.Hashtbl.html">MoreLabels.Hashtbl</a></h1>\n\n<pre><span class="keyword">module</span> Hashtbl: sig .. end</pre><hr width="100%">\n\n<pre id="TYPEt"><span class="keyword">type</span> (&apos;a, &apos;b) t = (&apos;a, &apos;b) Hashtbl.t </pre>\n\n\n<pre id="VALcreate">val create : ?random:bool -&gt; int -&gt; (&apos;a, &apos;b) t</pre>\n<pre id="VALclear">val clear : (&apos;a, &apos;b) t -&gt; unit</pre>\n<pre id="VALreset">val reset : (&apos;a, &apos;b) t -&gt; unit</pre>\n<pre id="VALcopy">val copy : (&apos;a, &apos;b) t -&gt; (&apos;a, &apos;b) t</pre>\n<pre id="VALadd">val add : (&apos;a, &apos;b) t -&gt; key:&apos;a -&gt; data:&apos;b -&gt; unit</pre>\n<pre id="VALfind">val find : (&apos;a, &apos;b) t -&gt; &apos;a -&gt; &apos;b</pre>\n<pre id="VALfind_all">val find_all : (&apos;a, &apos;b) t -&gt; &apos;a -&gt; &apos;b list</pre>\n<pre id="VALmem">val mem : (&apos;a, &apos;b) t -&gt; &apos;a -&gt; bool</pre>\n<pre id="VALremove">val remove : (&apos;a, &apos;b) t -&gt; &apos;a -&gt; unit</pre>\n<pre id="VALreplace">val replace : (&apos;a, &apos;b) t -&gt; key:&apos;a -&gt; data:&apos;b -&gt; unit</pre>\n<pre id="VALiter">val iter : f:(key:&apos;a -&gt; data:&apos;b -&gt; unit) -&gt; (&apos;a, &apos;b) t -&gt; unit</pre>\n<pre id="VALfold">val fold : f:(key:&apos;a -&gt; data:&apos;b -&gt; &apos;c -&gt; &apos;c) -&gt;       (&apos;a, &apos;b) t -&gt; init:&apos;c -&gt; &apos;c</pre>\n<pre id="VALlength">val length : (&apos;a, &apos;b) t -&gt; int</pre>\n<pre id="VALrandomize">val randomize : unit -&gt; unit</pre>\n<pre id="TYPEstatistics"><span class="keyword">type</span> statistics = Hashtbl.statistics </pre>\n\n\n<pre id="VALstats">val stats : (&apos;a, &apos;b) t -&gt; statistics</pre>\n<pre><span class="keyword">module</span> type HashedType = Hashtbl.HashedType</pre>\n<pre><span class="keyword">module</span> type SeededHashedType = Hashtbl.SeededHashedType</pre>\n<pre><span class="keyword">module</span> type S = sig .. end</pre>\n<pre><span class="keyword">module</span> type SeededS = sig .. end</pre>\n<pre><span class="keyword">module</span> Make: functor (H : HashedType) -&gt; S  with type key = H.t</pre>\n<pre><span class="keyword">module</span> MakeSeeded: functor (H : SeededHashedType) -&gt; SeededS  with type key = H.t</pre>\n<pre id="VALhash">val hash : &apos;a -&gt; int</pre>\n<pre id="VALseeded_hash">val seeded_hash : int -&gt; &apos;a -&gt; int</pre>\n<pre id="VALhash_param">val hash_param : int -&gt; int -&gt; &apos;a -&gt; int</pre>\n<pre id="VALseeded_hash_param">val seeded_hash_param : int -&gt; int -&gt; int -&gt; &apos;a -&gt; int</pre></div>'}}},pathContext:{relativePath:"api/MoreLabels.Hashtbl.html"}}}});
//# sourceMappingURL=path---api-more-labels-hashtbl-html-a738389fcfa9efbf2885.js.map