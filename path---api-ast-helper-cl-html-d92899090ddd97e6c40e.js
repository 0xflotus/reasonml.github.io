webpackJsonp([330],{"./node_modules/json-loader/index.js!./.cache/json/api-ast-helper-cl-html.json":function(e,s){e.exports={data:{file:{relativePath:"api/Ast_helper.Cl.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="Ast_helper.Ctf.html" title="Ast_helper.Ctf">Previous</a>\n&#xA0;<a class="up" href="Ast_helper.html" title="Ast_helper">Up</a>\n&#xA0;<a class="post" href="Ast_helper.Cf.html" title="Ast_helper.Cf">Next</a>\n</div>\n<h1>Module <a href="type_Ast_helper.Cl.html">Ast_helper.Cl</a></h1>\n\n<pre><span class="keyword">module</span> Cl: sig .. end</pre><div class="info module top">\nClass expressions<br>\n</div>\n<hr width="100%">\n\n<pre id="VALmk"><span class="keyword">let</span> mk:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.class_expr_desc) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALattr"><span class="keyword">let</span> attr: (Parsetree.class_expr, Parsetree.attribute) =&gt; Parsetree.class_expr;\n</pre>\n<pre id="VALconstr"><span class="keyword">let</span> constr:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Ast_helper.lid,\n    list(Parsetree.core_type)\n  ) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALstructure"><span class="keyword">let</span> structure:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.class_structure) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALfun_"><span class="keyword">let</span> fun_:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Asttypes.label,\n    option(Parsetree.expression),\n    Parsetree.pattern,\n    Parsetree.class_expr\n  ) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALapply"><span class="keyword">let</span> apply:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Parsetree.class_expr,\n    list((Asttypes.label, Parsetree.expression))\n  ) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALlet_"><span class="keyword">let</span> let_:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Asttypes.rec_flag,\n    list(Parsetree.value_binding),\n    Parsetree.class_expr\n  ) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALconstraint_"><span class="keyword">let</span> constraint_:\n  (\n    ~loc: Ast_helper.loc=?,\n    ~attrs: Ast_helper.attrs=?,\n    Parsetree.class_expr,\n    Parsetree.class_type\n  ) =&gt;\n  Parsetree.class_expr;\n</pre>\n<pre id="VALextension"><span class="keyword">let</span> extension:\n  (~loc: Ast_helper.loc=?, ~attrs: Ast_helper.attrs=?, Parsetree.extension) =&gt; Parsetree.class_expr;\n</pre></div>'}}},pathContext:{relativePath:"api/Ast_helper.Cl.html"}}}});
//# sourceMappingURL=path---api-ast-helper-cl-html-d92899090ddd97e6c40e.js.map