{"version":3,"sources":["webpack:///path---api-random-state-html-c8d9668b6b88315a0664.js","webpack:///./.cache/json/api-random-state-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-random-state-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,+EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,wBACAC,cACAC,QAAA,87CAIAC,aACAH,aAAA","file":"path---api-random-state-html-c8d9668b6b88315a0664.js","sourcesContent":["webpackJsonp([218],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-random-state-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Random.State.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"Random.html\\\" title=\\\"Random\\\">Up</a>\\n&#xA0;</div>\\n<h1>Module <a href=\\\"type_Random.State.html\\\">Random.State</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> State: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> t </pre>\\n<div class=\\\"info \\\">\\nThe type of PRNG states.<br>\\n</div>\\n\\n\\n<pre id=\\\"VALmake\\\">val make : int array -&gt; t</pre><div class=\\\"info \\\">\\nCreate a new state and initialize it with the given seed.<br>\\n</div>\\n\\n<pre id=\\\"VALmake_self_init\\\">val make_self_init : unit -&gt; t</pre><div class=\\\"info \\\">\\nCreate a new state and initialize it with a system-dependent\\n      low-entropy seed.<br>\\n</div>\\n\\n<pre id=\\\"VALcopy\\\">val copy : t -&gt; t</pre><div class=\\\"info \\\">\\nReturn a copy of the given state.<br>\\n</div>\\n\\n<pre id=\\\"VALbits\\\">val bits : t -&gt; int</pre>\\n<pre id=\\\"VALint\\\">val int : t -&gt; int -&gt; int</pre>\\n<pre id=\\\"VALint32\\\">val int32 : t -&gt; Int32.t -&gt; Int32.t</pre>\\n<pre id=\\\"VALnativeint\\\">val nativeint : t -&gt; Nativeint.t -&gt; Nativeint.t</pre>\\n<pre id=\\\"VALint64\\\">val int64 : t -&gt; Int64.t -&gt; Int64.t</pre>\\n<pre id=\\\"VALfloat\\\">val float : t -&gt; float -&gt; float</pre>\\n<pre id=\\\"VALbool\\\">val bool : t -&gt; bool</pre><div class=\\\"info \\\">\\nThese functions are the same as the basic functions, except that they\\n      use (and update) the given PRNG state instead of the default one.<br>\\n</div>\\n</div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Random.State.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-random-state-html-c8d9668b6b88315a0664.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Random.State.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"Random.html\\\" title=\\\"Random\\\">Up</a>\\n&#xA0;</div>\\n<h1>Module <a href=\\\"type_Random.State.html\\\">Random.State</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> State: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> t </pre>\\n<div class=\\\"info \\\">\\nThe type of PRNG states.<br>\\n</div>\\n\\n\\n<pre id=\\\"VALmake\\\">val make : int array -&gt; t</pre><div class=\\\"info \\\">\\nCreate a new state and initialize it with the given seed.<br>\\n</div>\\n\\n<pre id=\\\"VALmake_self_init\\\">val make_self_init : unit -&gt; t</pre><div class=\\\"info \\\">\\nCreate a new state and initialize it with a system-dependent\\n      low-entropy seed.<br>\\n</div>\\n\\n<pre id=\\\"VALcopy\\\">val copy : t -&gt; t</pre><div class=\\\"info \\\">\\nReturn a copy of the given state.<br>\\n</div>\\n\\n<pre id=\\\"VALbits\\\">val bits : t -&gt; int</pre>\\n<pre id=\\\"VALint\\\">val int : t -&gt; int -&gt; int</pre>\\n<pre id=\\\"VALint32\\\">val int32 : t -&gt; Int32.t -&gt; Int32.t</pre>\\n<pre id=\\\"VALnativeint\\\">val nativeint : t -&gt; Nativeint.t -&gt; Nativeint.t</pre>\\n<pre id=\\\"VALint64\\\">val int64 : t -&gt; Int64.t -&gt; Int64.t</pre>\\n<pre id=\\\"VALfloat\\\">val float : t -&gt; float -&gt; float</pre>\\n<pre id=\\\"VALbool\\\">val bool : t -&gt; bool</pre><div class=\\\"info \\\">\\nThese functions are the same as the basic functions, except that they\\n      use (and update) the given PRNG state instead of the default one.<br>\\n</div>\\n</div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Random.State.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-random-state-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-random-state-html.json\n// module chunks = 218"],"sourceRoot":""}