{"version":3,"sources":["webpack:///path---api-hashtbl-make-seeded-html-ec592d27ee292364205b.js","webpack:///./.cache/json/api-hashtbl-make-seeded-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-hashtbl-make-seeded-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,sFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,8BACAC,cACAC,QAAA,mhGAIAC,aACAH,aAAA","file":"path---api-hashtbl-make-seeded-html-ec592d27ee292364205b.js","sourcesContent":["webpackJsonp([281],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-hashtbl-make-seeded-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Hashtbl.MakeSeeded.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Hashtbl.Make.html\\\" title=\\\"Hashtbl.Make\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"Hashtbl.html\\\" title=\\\"Hashtbl\\\">Up</a>\\n&#xA0;</div>\\n<h1>Functor <a href=\\\"type_Hashtbl.MakeSeeded.html\\\">Hashtbl.MakeSeeded</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> MakeSeeded: functor (H : SeededHashedType) -&gt; SeededS  with type key = H.t</pre><div class=\\\"info module top\\\">\\nFunctor building an implementation of the hashtable structure.\\n    The functor <code class=\\\"code\\\">Hashtbl.MakeSeeded</code> returns a structure containing\\n    a type <code class=\\\"code\\\">key</code> of keys and a type <code class=\\\"code\\\">&apos;a t</code> of hash tables\\n    associating data of type <code class=\\\"code\\\">&apos;a</code> to keys of type <code class=\\\"code\\\">key</code>.\\n    The operations perform similarly to those of the generic\\n    interface, but use the seeded hashing and equality functions\\n    specified in the functor argument <code class=\\\"code\\\">H</code> instead of generic\\n    equality and hashing.  The <code class=\\\"code\\\">create</code> operation of the\\n    result structure supports the <code class=\\\"code\\\">~random</code> optional parameter\\n    and returns randomized hash tables if <code class=\\\"code\\\">~random:true</code> is passed\\n    or if randomization is globally on (see <a href=\\\"Hashtbl.html#VALrandomize\\\"><code class=\\\"code\\\">Hashtbl.randomize</code></a>).<br>\\n<b>Since</b> 4.00.0<br>\\n</div>\\n<table border=\\\"0\\\" cellpadding=\\\"3\\\" width=\\\"100%\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\" width=\\\"1%%\\\"><b>Parameters: </b></td>\\n<td>\\n<table class=\\\"paramstable\\\">\\n<tbody><tr>\\n<td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"15%\\\">\\n<code>H</code></td>\\n<td align=\\\"center\\\" valign=\\\"top\\\">:</td>\\n<td><code class=\\\"type\\\">SeededHashedType</code>\\n</td></tr></tbody></table>\\n</td>\\n</tr>\\n</tbody></table>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEkey\\\"><span class=\\\"keyword\\\">type</span> key </pre>\\n\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> &apos;a t </pre>\\n\\n\\n<pre id=\\\"VALcreate\\\">val create : ?random:bool -&gt; int -&gt; &apos;a t</pre>\\n<pre id=\\\"VALclear\\\">val clear : &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALreset\\\">val reset : &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALcopy\\\">val copy : &apos;a t -&gt; &apos;a t</pre>\\n<pre id=\\\"VALadd\\\">val add : &apos;a t -&gt; key -&gt; &apos;a -&gt; unit</pre>\\n<pre id=\\\"VALremove\\\">val remove : &apos;a t -&gt; key -&gt; unit</pre>\\n<pre id=\\\"VALfind\\\">val find : &apos;a t -&gt; key -&gt; &apos;a</pre>\\n<pre id=\\\"VALfind_all\\\">val find_all : &apos;a t -&gt; key -&gt; &apos;a list</pre>\\n<pre id=\\\"VALreplace\\\">val replace : &apos;a t -&gt; key -&gt; &apos;a -&gt; unit</pre>\\n<pre id=\\\"VALmem\\\">val mem : &apos;a t -&gt; key -&gt; bool</pre>\\n<pre id=\\\"VALiter\\\">val iter : (key -&gt; &apos;a -&gt; unit) -&gt; &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALfold\\\">val fold : (key -&gt; &apos;a -&gt; &apos;b -&gt; &apos;b) -&gt; &apos;a t -&gt; &apos;b -&gt; &apos;b</pre>\\n<pre id=\\\"VALlength\\\">val length : &apos;a t -&gt; int</pre>\\n<pre id=\\\"VALstats\\\">val stats : &apos;a t -&gt; Hashtbl.statistics</pre></div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Hashtbl.MakeSeeded.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-hashtbl-make-seeded-html-ec592d27ee292364205b.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Hashtbl.MakeSeeded.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Hashtbl.Make.html\\\" title=\\\"Hashtbl.Make\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"Hashtbl.html\\\" title=\\\"Hashtbl\\\">Up</a>\\n&#xA0;</div>\\n<h1>Functor <a href=\\\"type_Hashtbl.MakeSeeded.html\\\">Hashtbl.MakeSeeded</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> MakeSeeded: functor (H : SeededHashedType) -&gt; SeededS  with type key = H.t</pre><div class=\\\"info module top\\\">\\nFunctor building an implementation of the hashtable structure.\\n    The functor <code class=\\\"code\\\">Hashtbl.MakeSeeded</code> returns a structure containing\\n    a type <code class=\\\"code\\\">key</code> of keys and a type <code class=\\\"code\\\">&apos;a t</code> of hash tables\\n    associating data of type <code class=\\\"code\\\">&apos;a</code> to keys of type <code class=\\\"code\\\">key</code>.\\n    The operations perform similarly to those of the generic\\n    interface, but use the seeded hashing and equality functions\\n    specified in the functor argument <code class=\\\"code\\\">H</code> instead of generic\\n    equality and hashing.  The <code class=\\\"code\\\">create</code> operation of the\\n    result structure supports the <code class=\\\"code\\\">~random</code> optional parameter\\n    and returns randomized hash tables if <code class=\\\"code\\\">~random:true</code> is passed\\n    or if randomization is globally on (see <a href=\\\"Hashtbl.html#VALrandomize\\\"><code class=\\\"code\\\">Hashtbl.randomize</code></a>).<br>\\n<b>Since</b> 4.00.0<br>\\n</div>\\n<table border=\\\"0\\\" cellpadding=\\\"3\\\" width=\\\"100%\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\" width=\\\"1%%\\\"><b>Parameters: </b></td>\\n<td>\\n<table class=\\\"paramstable\\\">\\n<tbody><tr>\\n<td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"15%\\\">\\n<code>H</code></td>\\n<td align=\\\"center\\\" valign=\\\"top\\\">:</td>\\n<td><code class=\\\"type\\\">SeededHashedType</code>\\n</td></tr></tbody></table>\\n</td>\\n</tr>\\n</tbody></table>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEkey\\\"><span class=\\\"keyword\\\">type</span> key </pre>\\n\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> &apos;a t </pre>\\n\\n\\n<pre id=\\\"VALcreate\\\">val create : ?random:bool -&gt; int -&gt; &apos;a t</pre>\\n<pre id=\\\"VALclear\\\">val clear : &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALreset\\\">val reset : &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALcopy\\\">val copy : &apos;a t -&gt; &apos;a t</pre>\\n<pre id=\\\"VALadd\\\">val add : &apos;a t -&gt; key -&gt; &apos;a -&gt; unit</pre>\\n<pre id=\\\"VALremove\\\">val remove : &apos;a t -&gt; key -&gt; unit</pre>\\n<pre id=\\\"VALfind\\\">val find : &apos;a t -&gt; key -&gt; &apos;a</pre>\\n<pre id=\\\"VALfind_all\\\">val find_all : &apos;a t -&gt; key -&gt; &apos;a list</pre>\\n<pre id=\\\"VALreplace\\\">val replace : &apos;a t -&gt; key -&gt; &apos;a -&gt; unit</pre>\\n<pre id=\\\"VALmem\\\">val mem : &apos;a t -&gt; key -&gt; bool</pre>\\n<pre id=\\\"VALiter\\\">val iter : (key -&gt; &apos;a -&gt; unit) -&gt; &apos;a t -&gt; unit</pre>\\n<pre id=\\\"VALfold\\\">val fold : (key -&gt; &apos;a -&gt; &apos;b -&gt; &apos;b) -&gt; &apos;a t -&gt; &apos;b -&gt; &apos;b</pre>\\n<pre id=\\\"VALlength\\\">val length : &apos;a t -&gt; int</pre>\\n<pre id=\\\"VALstats\\\">val stats : &apos;a t -&gt; Hashtbl.statistics</pre></div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Hashtbl.MakeSeeded.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-hashtbl-make-seeded-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-hashtbl-make-seeded-html.json\n// module chunks = 281"],"sourceRoot":""}