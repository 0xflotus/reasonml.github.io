{"version":3,"sources":["webpack:///path---ru-guide-language-pattern-matching-e4427bc76cc2ff95a701.js","webpack:///./.cache/json/ru-guide-language-pattern-matching.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/ru-guide-language-pattern-matching.json","module","exports","data","allFile","edges","node","relativePath","childMarkdownRemark","frontmatter","title","order","file","html","pathContext","section","sectionTitle","relatedFiles"],"mappings":"AAAAA,cAAc,KAERC,4FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,SACAC,QAEAC,MACAC,aAAA,uBACAC,qBACAC,aACAC,MAAA,UACAC,MAAA,QAMAL,MACAC,aAAA,oBACAC,qBACAC,aACAC,MAAA,iBACAC,MAAA,OAMAL,MACAC,aAAA,oBACAC,qBACAC,aACAC,MAAA,sBACAC,MAAA,QAMAL,MACAC,aAAA,2BACAC,qBACAC,aACAC,MAAA,cACAC,MAAA,OAMAL,MACAC,aAAA,2CACAC,qBACAC,aACAC,MAAA,oBACAC,MAAA,QAMAL,MACAC,aAAA,yCACAC,qBACAC,aACAC,MAAA,wBACAC,MAAA,QAMAL,MACAC,aAAA,iCACAC,qBACAC,aACAC,MAAA,sBACAC,MAAA,QAMAL,MACAC,aAAA,+CACAC,qBACAC,aACAC,MAAA,uBACAC,MAAA,QAMAL,MACAC,aAAA,oCACAC,qBACAC,aACAC,MAAA,kBACAC,MAAA,OAMAL,MACAC,aAAA,oCACAC,qBACAC,aACAC,MAAA,gBACAC,MAAA,OAMAL,MACAC,aAAA,+BACAC,qBACAC,aACAC,MAAA,aACAC,MAAA,QAMAL,MACAC,aAAA,mCACAC,qBACAC,aACAC,MAAA,aACAC,MAAA,OAMAL,MACAC,aAAA,iCACAC,qBACAC,aACAC,MAAA,iBACAC,MAAA,OAMAL,MACAC,aAAA,iCACAC,qBACAC,aACAC,MAAA,aACAC,MAAA,SAMAL,MACAC,aAAA,+BACAC,qBACAC,aACAC,MAAA,QACAC,MAAA,QAMAL,MACAC,aAAA,2CACAC,qBACAC,aACAC,MAAA,0BACAC,MAAA,OAMAL,MACAC,aAAA,qCACAC,qBACAC,aACAC,MAAA,qBACAC,MAAA,SAMAL,MACAC,aAAA,wCACAC,qBACAC,aACAC,MAAA,qBACAC,MAAA,SAMAL,MACAC,aAAA,+BACAC,qBACAC,aACAC,MAAA,UACAC,MAAA,SAMAL,MACAC,aAAA,gCACAC,qBACAC,aACAC,MAAA,WACAC,MAAA,SAMAL,MACAC,aAAA,6BACAC,qBACAC,aACAC,MAAA,eACAC,MAAA,QAMAL,MACAC,aAAA,gCACAC,qBACAC,aACAC,MAAA,UACAC,MAAA,SAMAL,MACAC,aAAA,yCACAC,qBACAC,aACAC,MAAA,QACAC,MAAA,QAMAL,MACAC,aAAA,mCACAC,qBACAC,aACAC,MAAA,eACAC,MAAA,QAMAL,MACAC,aAAA,sCACAC,qBACAC,aACAC,MAAA,kBACAC,MAAA,QAMAL,MACAC,aAAA,2BACAC,qBACAC,aACAC,MAAA,MACAC,MAAA,SAMAL,MACAC,aAAA,8BACAC,qBACAC,aACAC,MAAA,SACAC,MAAA,SAMAL,MACAC,aAAA,gCACAC,qBACAC,aACAC,MAAA,UACAC,MAAA,SAMAL,MACAC,aAAA,8BACAC,qBACAC,aACAC,MAAA,SACAC,MAAA,SAMAL,MACAC,aAAA,gCACAC,qBACAC,aACAC,MAAA,QACAC,MAAA,OAMAL,MACAC,aAAA,oCACAC,qBACAC,aACAC,MAAA,iBACAC,MAAA,SAMAL,MACAC,aAAA,uCACAC,qBACAC,aACAC,MAAA,kBACAC,MAAA,QAMAL,MACAC,aAAA,8BACAC,qBACAC,aACAC,MAAA,SACAC,MAAA,QAMAL,MACAC,aAAA,wCACAC,qBACAC,aACAC,MAAA,kBACAC,MAAA,SAMAL,MACAC,aAAA,6BACAC,qBACAC,aACAC,MAAA,SACAC,MAAA,QAMAL,MACAC,aAAA,4BACAC,qBACAC,aACAC,MAAA,OACAC,MAAA,QAMAL,MACAC,aAAA,wCACAC,qBACAC,aACAC,MAAA,wBACAC,MAAA,OAMAL,MACAC,aAAA,+BACAC,qBACAC,aACAC,MAAA,WACAC,MAAA,QAMAL,MACAC,aAAA,2BACAC,qBACAC,aACAC,MAAA,SACAC,MAAA,QAMAL,MACAC,aAAA,gCACAC,qBACAC,aACAC,MAAA,aACAC,MAAA,QAOAC,MACAL,aAAA,wCACAC,qBACAK,KAAA,+vcACAJ,aACAC,MAAA,sBAKAI,aACAC,QAAA,WACAC,aAAA,QACAT,aAAA,wCACAU,aAAA","file":"path---ru-guide-language-pattern-matching-e4427bc76cc2ff95a701.js","sourcesContent":["webpackJsonp([24],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/ru-guide-language-pattern-matching.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"allFile\": {\n\t\t\t\t\"edges\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/examples.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Примеры\",\n\t\t\t\t\t\t\t\t\t\"order\": 60\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/index.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Гайд по Reason\",\n\t\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/ocaml.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Comparison to OCaml\",\n\t\t\t\t\t\t\t\t\t\"order\": 50\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/what-and-why.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Что и Зачем\",\n\t\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/editors-plugins.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Плагины редактора\",\n\t\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/extra-goodies.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Дополнительные бонусы\",\n\t\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/index.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Настройка редактора\",\n\t\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/global-installation.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Глобальная установка\",\n\t\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/converting.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Перенос JS кода\",\n\t\t\t\t\t\t\t\t\t\"order\": 5\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/quickstart.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Быстрый старт\",\n\t\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/index.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"JavaScript\",\n\t\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/libraries.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Библиотеки\",\n\t\t\t\t\t\t\t\t\t\"order\": 2\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/interop.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Взаимодействие\",\n\t\t\t\t\t\t\t\t\t\"order\": 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/exception.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Исключения\",\n\t\t\t\t\t\t\t\t\t\"order\": 175\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/boolean.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Булев\",\n\t\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/syntax-cheatsheet.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Шпаргалка по синтаксису\",\n\t\t\t\t\t\t\t\t\t\"order\": 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/destructuring.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Деструктурирование\",\n\t\t\t\t\t\t\t\t\t\"order\": 130\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/imperative-loops.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Императивные циклы\",\n\t\t\t\t\t\t\t\t\t\"order\": 150\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/if-else.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"If-Else\",\n\t\t\t\t\t\t\t\t\t\"order\": 110\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/external.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"External\",\n\t\t\t\t\t\t\t\t\t\"order\": 170\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/index.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Основы языка\",\n\t\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/function.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Функция\",\n\t\t\t\t\t\t\t\t\t\"order\": 100\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/integer-and-float.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Числа\",\n\t\t\t\t\t\t\t\t\t\"order\": 40\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/let-binding.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Let привязка\",\n\t\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/list-and-array.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Список и Массив\",\n\t\t\t\t\t\t\t\t\t\"order\": 80\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/jsx.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"JSX\",\n\t\t\t\t\t\t\t\t\t\"order\": 160\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/module.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Модуль\",\n\t\t\t\t\t\t\t\t\t\"order\": 180\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/mutation.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Мутации\",\n\t\t\t\t\t\t\t\t\t\"order\": 140\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/object.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Объект\",\n\t\t\t\t\t\t\t\t\t\"order\": 175\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/overview.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Обзор\",\n\t\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/more-on-type.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Больше о типах\",\n\t\t\t\t\t\t\t\t\t\"order\": 120\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/string-and-char.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Строка и символ\",\n\t\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/record.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Запись\",\n\t\t\t\t\t\t\t\t\t\"order\": 60\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Паттерн-матчинг\",\n\t\t\t\t\t\t\t\t\t\"order\": 135\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/tuple.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Кортеж\",\n\t\t\t\t\t\t\t\t\t\"order\": 50\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/type.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Тип!\",\n\t\t\t\t\t\t\t\t\t\"order\": 15\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/convert-from-ocaml.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Converting from OCaml\",\n\t\t\t\t\t\t\t\t\t\"order\": 4\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/variant.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Вариант!\",\n\t\t\t\t\t\t\t\t\t\"order\": 70\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/index.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Native\",\n\t\t\t\t\t\t\t\t\t\"order\": 40\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/quickstart.md\",\n\t\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\t\"title\": \"Quickstart\",\n\t\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\"html\": \"<p><em>Убедитесь что вы прочитали про <a href=\\\"../../guide/language/variant\\\">Вариант</a> сперва</em>.</p>\\n<p><strong>Ма наконец добрались</strong>! Паттерн-матчинг — это одна из лучших фич языка. Как\\nдеструктурирование, но дает больше помощи от системы типов.</p>\\n<h3 id=\\\"Использование\\\"><a href=\\\"#%D0%98%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Использование</h3>\\n<p>Допустим есть вариант:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">type</span> payload =\\n| <span class=\\\"hljs-type\\\">BadResult</span> int\\n| <span class=\\\"hljs-type\\\">GoodResult</span> string\\n| <span class=\\\"hljs-type\\\">NoResult</span>;</code></pre>\\n      </div>\\n<p>Использую <code>switch</code> можно его \\\"деструктурировать\\\":</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> data = <span class=\\\"hljs-type\\\">GoodResult</span> <span class=\\\"hljs-string\\\">\\\"Product shipped!\\\"</span>;\\n\\n<span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; <span class=\\\"hljs-string\\\">\\\"Success! \\\"</span> ^ theMessage\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt;\\n    <span class=\\\"hljs-string\\\">\\\"Something's wrong. The error code is: \\\"</span> ^ (string_of_int errorCode)\\n  };</code></pre>\\n      </div>\\n<p>Заметьте как мы деструктурировали <code>data</code> обрабатывая каждый случай. Описанный <code>switch</code>\\nвызовет предупреждение от компилятора:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-none\\\"><code><span class=\\\"hljs-type\\\">Warning</span> <span class=\\\"hljs-number\\\">8</span>: this pattern-matching <span class=\\\"hljs-keyword\\\">is</span> not exhaustive.\\n<span class=\\\"hljs-type\\\">Here</span> <span class=\\\"hljs-keyword\\\">is</span> an example <span class=\\\"hljs-keyword\\\">of</span> a value that <span class=\\\"hljs-keyword\\\">is</span> not matched:\\n<span class=\\\"hljs-type\\\">NoResult</span></code></pre>\\n      </div>\\n<p>Разве не здорово? Система типов предупреждает о пропущенной ветке. Этот <strong>условный</strong> аспект\\nделает паттерн-матчинг очень мощной фичей. Большая часть структур данных \\\"если это, то потом\\nто\\\" работает так:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">switch</span> myList {\\n| [] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"Empty list\\\"</span>\\n| [a, ...theRest] =&gt; print_endline (<span class=\\\"hljs-string\\\">\\\"list with the head value \\\"</span> ^ a)\\n};\\n\\n<span class=\\\"hljs-keyword\\\">switch</span> myArray {\\n| [|<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">2</span>|] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This is an array with item 1 and 2\\\"</span>\\n| [||] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This array has no element\\\"</span>\\n| <span class=\\\"hljs-number\\\">_</span> =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This is an array\\\"</span>\\n}</code></pre>\\n      </div>\\n<p>Символ <code>_</code> специальный случай, который срабатывает для всех необработанных веток.</p>\\n<p>Вы можете выбирать ветки по строке, числу и другим типам. Вы даже можете иметь несколько\\nветок с одним результатом.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> reply =\\n  <span class=\\\"hljs-keyword\\\">switch</span> message {\\n  | <span class=\\\"hljs-string\\\">\\\"Reason's pretty cool\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Yep\\\"</span>\\n  | <span class=\\\"hljs-string\\\">\\\"good night\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"See ya!\\\"</span>\\n  | <span class=\\\"hljs-string\\\">\\\"hello\\\"</span> | <span class=\\\"hljs-string\\\">\\\"hi\\\"</span> | <span class=\\\"hljs-string\\\">\\\"heya\\\"</span> | <span class=\\\"hljs-string\\\">\\\"hey\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"hello to you too!\\\"</span>\\n  | <span class=\\\"hljs-number\\\">_</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Nice to meet you!\\\"</span>\\n  };</code></pre>\\n      </div>\\n<p>В комбинации с другими структурами данных паттерн-матчинг может создавать очень лаконичный,\\nпроверенный и производительный код:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; <span class=\\\"hljs-string\\\">\\\"Success! \\\"</span> ^ theMessage\\n  | <span class=\\\"hljs-type\\\">BadResult</span> (<span class=\\\"hljs-number\\\">0</span> | <span class=\\\"hljs-number\\\">1</span> | <span class=\\\"hljs-number\\\">5</span>) =&gt; <span class=\\\"hljs-string\\\">\\\"Something's wrong. It's a server side problem.\\\"</span>\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt; <span class=\\\"hljs-string\\\">\\\"Unknown error occurred. Code: \\\"</span> ^ string_of_int errorCode\\n  | <span class=\\\"hljs-type\\\">NoResult</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Things look fine\\\"</span>\\n  };</code></pre>\\n      </div>\\n<h4 id=\\\"when-проверки\\\"><a href=\\\"#when-%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>When проверки</h4>\\n<p>Когда вам действительно нужно проверить некоторую логику внутри паттерна, вы можете\\nиспользовать <code>when</code>, который является синтаксическим сахаром для <code>if</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; ...\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode when isServerError errorCode =&gt; ...\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt; ... <span class=\\\"hljs-comment\\\">/* otherwise */</span>\\n  | <span class=\\\"hljs-type\\\">NoResult</span> =&gt; ...\\n  };</code></pre>\\n      </div>\\n<h3 id=\\\"Советы-и-трюки\\\"><a href=\\\"#%D0%A1%D0%BE%D0%B2%D0%B5%D1%82%D1%8B-%D0%B8-%D1%82%D1%80%D1%8E%D0%BA%D0%B8\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Советы и трюки</h3>\\n<p><strong>Старайтесь по возможности держать список веток плоским</strong>. Пример ниже.</p>\\n<p>Не используйте <code>_</code> слишком часто. Этот способ не дает компилятору точно сказать, что\\nвы забыли проверить один из случаем. А это особенно ценно во время рефакторинга, когда вы\\nдобавляете новый элемент в вариант. Постарайтесь использовать <code>_</code> только для случаев с\\nбесконечными вариантами (строки, числа).</p>\\n<p>Вот серия примеров от худшего к лучшему:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt;\\n  <span class=\\\"hljs-keyword\\\">if</span> (opt == <span class=\\\"hljs-type\\\">None</span>) {\\n    <span class=\\\"hljs-type\\\">Js</span>.false_\\n  } <span class=\\\"hljs-keyword\\\">else</span> {\\n    <span class=\\\"hljs-keyword\\\">if</span> (opt == <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span>) {\\n      <span class=\\\"hljs-type\\\">Js</span>.true_\\n    } <span class=\\\"hljs-keyword\\\">else</span> {\\n      <span class=\\\"hljs-type\\\">Js</span>.false_\\n    }\\n  };</code></pre>\\n      </div>\\n<p>Это совсем глупо, лучше использовать паттерн-матчинг:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n| <span class=\\\"hljs-type\\\">Some</span> a =&gt; <span class=\\\"hljs-keyword\\\">switch</span> a {\\n  | <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n  | <span class=\\\"hljs-literal\\\">false</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n  }\\n};</code></pre>\\n      </div>\\n<p>Лучше, но все еще вложено.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">false</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>Вот теперь отлично!  И вы даже можете сделать так:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-number\\\">_</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>Так короче, но убивает проверку, о которой говорилось ранее. Такой вариант лучший:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">false</span> | <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>В таком коде намного сложнее сделать ошибку! Всегда старайтесь использовать такой подход\\nвместо if-else. Это более кратко и <a href=\\\"../../guide/language/variant#design-decisions\\\">более производительно</a>.</p>\\n<p>Посмотрите другой пример для кортежа <a href=\\\"../../guide/language/tuple#tips--tricks\\\">тут</a>.</p>\\n<h3 id=\\\"Проектные-решения\\\"><a href=\\\"#%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%BD%D1%8B%D0%B5-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D1%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Проектные решения</h3>\\n<p>The notorious <a href=\\\"https://en.wikipedia.org/wiki/Fizz_buzz#Programming_interviews\\\">fizzbuzz problem</a> strangely trips some people up, partially due its nature of paralyzing the programmer who hopes to simplify/unify the few condition branches in search of elegance where there's none. While fizzbuzz is slightly too dynamic to be solved in <code>when</code>-less switches, hopefully you can see that usually, pattern-matching's visual conciseness allows us to overcome decision paralysis, while keeping all the benefits (and more, as you've seen) of a bunch of brute-forced <code>if-else</code>s. There's really nothing wrong with explicitly listing out all the possibilities; Pattern matching corresponds to <strong>case analysis</strong> in math, a valid problem-solving technique that proves to be extremely convenient.</p>\\n<p>Using a Reason <code>switch</code> for the first time might make you feel like you've been missing out all these years. Careful, for it might ruin other languages for you =).</p>\\n<p>If you've tried to refactor a big, nested if-else logic, you might realize it's very hard to get the logic right. On the other hand, pattern matching + tuple conceptually maps to a 2D table, where each cell can be independently filled. This ensures that whenever you need to add a case in the <code>switch</code>, you can target that and only that table cell, without messing other cells up.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">type</span> animal = <span class=\\\"hljs-type\\\">Dog</span> | <span class=\\\"hljs-type\\\">Cat</span> | <span class=\\\"hljs-type\\\">Bird</span>;\\n<span class=\\\"hljs-keyword\\\">let</span> result = <span class=\\\"hljs-keyword\\\">switch</span> (isBig, myAnimal) {\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Dog</span>) =&gt; <span class=\\\"hljs-number\\\">1</span>\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Cat</span>) =&gt; <span class=\\\"hljs-number\\\">2</span>\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Bird</span>) =&gt; <span class=\\\"hljs-number\\\">3</span>\\n| (<span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-type\\\">Dog</span> | <span class=\\\"hljs-type\\\">Cat</span>) =&gt; <span class=\\\"hljs-number\\\">4</span>\\n| (<span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-type\\\">Bird</span>) =&gt; <span class=\\\"hljs-number\\\">5</span>\\n};</code></pre>\\n      </div>\\n<table>\\n<thead>\\n<tr>\\n<th>isBig \\\\ myAnimal</th>\\n<th>Dog</th>\\n<th>Cat</th>\\n<th>Bird</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>true</td>\\n<td>1</td>\\n<td>2</td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td>false</td>\\n<td>4</td>\\n<td>4</td>\\n<td>5</td>\\n</tr>\\n</tbody>\\n</table>\",\n\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\"title\": \"Паттерн-матчинг\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"section\": \"ru/guide\",\n\t\t\t\"sectionTitle\": \"Guide\",\n\t\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\t\"relatedFiles\": \"/^ru\\\\/guide\\\\/.*\\\\.md$/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ru-guide-language-pattern-matching-e4427bc76cc2ff95a701.js","module.exports = {\n\t\"data\": {\n\t\t\"allFile\": {\n\t\t\t\"edges\": [\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/examples.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Примеры\",\n\t\t\t\t\t\t\t\t\"order\": 60\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/index.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Гайд по Reason\",\n\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/ocaml.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Comparison to OCaml\",\n\t\t\t\t\t\t\t\t\"order\": 50\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/what-and-why.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Что и Зачем\",\n\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/editors-plugins.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Плагины редактора\",\n\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/extra-goodies.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Дополнительные бонусы\",\n\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/index.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Настройка редактора\",\n\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/editor-tools/global-installation.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Глобальная установка\",\n\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/converting.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Перенос JS кода\",\n\t\t\t\t\t\t\t\t\"order\": 5\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/quickstart.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Быстрый старт\",\n\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/index.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"JavaScript\",\n\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/libraries.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Библиотеки\",\n\t\t\t\t\t\t\t\t\"order\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/interop.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Взаимодействие\",\n\t\t\t\t\t\t\t\t\"order\": 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/exception.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Исключения\",\n\t\t\t\t\t\t\t\t\"order\": 175\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/boolean.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Булев\",\n\t\t\t\t\t\t\t\t\"order\": 30\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/javascript/syntax-cheatsheet.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Шпаргалка по синтаксису\",\n\t\t\t\t\t\t\t\t\"order\": 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/destructuring.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Деструктурирование\",\n\t\t\t\t\t\t\t\t\"order\": 130\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/imperative-loops.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Императивные циклы\",\n\t\t\t\t\t\t\t\t\"order\": 150\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/if-else.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"If-Else\",\n\t\t\t\t\t\t\t\t\"order\": 110\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/external.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"External\",\n\t\t\t\t\t\t\t\t\"order\": 170\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/index.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Основы языка\",\n\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/function.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Функция\",\n\t\t\t\t\t\t\t\t\"order\": 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/integer-and-float.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Числа\",\n\t\t\t\t\t\t\t\t\"order\": 40\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/let-binding.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Let привязка\",\n\t\t\t\t\t\t\t\t\"order\": 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/list-and-array.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Список и Массив\",\n\t\t\t\t\t\t\t\t\"order\": 80\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/jsx.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"JSX\",\n\t\t\t\t\t\t\t\t\"order\": 160\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/module.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Модуль\",\n\t\t\t\t\t\t\t\t\"order\": 180\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/mutation.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Мутации\",\n\t\t\t\t\t\t\t\t\"order\": 140\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/object.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Объект\",\n\t\t\t\t\t\t\t\t\"order\": 175\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/overview.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Обзор\",\n\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/more-on-type.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Больше о типах\",\n\t\t\t\t\t\t\t\t\"order\": 120\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/string-and-char.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Строка и символ\",\n\t\t\t\t\t\t\t\t\"order\": 20\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/record.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Запись\",\n\t\t\t\t\t\t\t\t\"order\": 60\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Паттерн-матчинг\",\n\t\t\t\t\t\t\t\t\"order\": 135\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/tuple.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Кортеж\",\n\t\t\t\t\t\t\t\t\"order\": 50\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/type.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Тип!\",\n\t\t\t\t\t\t\t\t\"order\": 15\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/convert-from-ocaml.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Converting from OCaml\",\n\t\t\t\t\t\t\t\t\"order\": 4\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/language/variant.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Вариант!\",\n\t\t\t\t\t\t\t\t\"order\": 70\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/index.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Native\",\n\t\t\t\t\t\t\t\t\"order\": 40\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"relativePath\": \"ru/guide/native/quickstart.md\",\n\t\t\t\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Quickstart\",\n\t\t\t\t\t\t\t\t\"order\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\t\"childMarkdownRemark\": {\n\t\t\t\t\"html\": \"<p><em>Убедитесь что вы прочитали про <a href=\\\"../../guide/language/variant\\\">Вариант</a> сперва</em>.</p>\\n<p><strong>Ма наконец добрались</strong>! Паттерн-матчинг — это одна из лучших фич языка. Как\\nдеструктурирование, но дает больше помощи от системы типов.</p>\\n<h3 id=\\\"Использование\\\"><a href=\\\"#%D0%98%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Использование</h3>\\n<p>Допустим есть вариант:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">type</span> payload =\\n| <span class=\\\"hljs-type\\\">BadResult</span> int\\n| <span class=\\\"hljs-type\\\">GoodResult</span> string\\n| <span class=\\\"hljs-type\\\">NoResult</span>;</code></pre>\\n      </div>\\n<p>Использую <code>switch</code> можно его \\\"деструктурировать\\\":</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> data = <span class=\\\"hljs-type\\\">GoodResult</span> <span class=\\\"hljs-string\\\">\\\"Product shipped!\\\"</span>;\\n\\n<span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; <span class=\\\"hljs-string\\\">\\\"Success! \\\"</span> ^ theMessage\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt;\\n    <span class=\\\"hljs-string\\\">\\\"Something's wrong. The error code is: \\\"</span> ^ (string_of_int errorCode)\\n  };</code></pre>\\n      </div>\\n<p>Заметьте как мы деструктурировали <code>data</code> обрабатывая каждый случай. Описанный <code>switch</code>\\nвызовет предупреждение от компилятора:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-none\\\"><code><span class=\\\"hljs-type\\\">Warning</span> <span class=\\\"hljs-number\\\">8</span>: this pattern-matching <span class=\\\"hljs-keyword\\\">is</span> not exhaustive.\\n<span class=\\\"hljs-type\\\">Here</span> <span class=\\\"hljs-keyword\\\">is</span> an example <span class=\\\"hljs-keyword\\\">of</span> a value that <span class=\\\"hljs-keyword\\\">is</span> not matched:\\n<span class=\\\"hljs-type\\\">NoResult</span></code></pre>\\n      </div>\\n<p>Разве не здорово? Система типов предупреждает о пропущенной ветке. Этот <strong>условный</strong> аспект\\nделает паттерн-матчинг очень мощной фичей. Большая часть структур данных \\\"если это, то потом\\nто\\\" работает так:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">switch</span> myList {\\n| [] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"Empty list\\\"</span>\\n| [a, ...theRest] =&gt; print_endline (<span class=\\\"hljs-string\\\">\\\"list with the head value \\\"</span> ^ a)\\n};\\n\\n<span class=\\\"hljs-keyword\\\">switch</span> myArray {\\n| [|<span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">2</span>|] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This is an array with item 1 and 2\\\"</span>\\n| [||] =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This array has no element\\\"</span>\\n| <span class=\\\"hljs-number\\\">_</span> =&gt; print_endline <span class=\\\"hljs-string\\\">\\\"This is an array\\\"</span>\\n}</code></pre>\\n      </div>\\n<p>Символ <code>_</code> специальный случай, который срабатывает для всех необработанных веток.</p>\\n<p>Вы можете выбирать ветки по строке, числу и другим типам. Вы даже можете иметь несколько\\nветок с одним результатом.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> reply =\\n  <span class=\\\"hljs-keyword\\\">switch</span> message {\\n  | <span class=\\\"hljs-string\\\">\\\"Reason's pretty cool\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Yep\\\"</span>\\n  | <span class=\\\"hljs-string\\\">\\\"good night\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"See ya!\\\"</span>\\n  | <span class=\\\"hljs-string\\\">\\\"hello\\\"</span> | <span class=\\\"hljs-string\\\">\\\"hi\\\"</span> | <span class=\\\"hljs-string\\\">\\\"heya\\\"</span> | <span class=\\\"hljs-string\\\">\\\"hey\\\"</span> =&gt; <span class=\\\"hljs-string\\\">\\\"hello to you too!\\\"</span>\\n  | <span class=\\\"hljs-number\\\">_</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Nice to meet you!\\\"</span>\\n  };</code></pre>\\n      </div>\\n<p>В комбинации с другими структурами данных паттерн-матчинг может создавать очень лаконичный,\\nпроверенный и производительный код:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; <span class=\\\"hljs-string\\\">\\\"Success! \\\"</span> ^ theMessage\\n  | <span class=\\\"hljs-type\\\">BadResult</span> (<span class=\\\"hljs-number\\\">0</span> | <span class=\\\"hljs-number\\\">1</span> | <span class=\\\"hljs-number\\\">5</span>) =&gt; <span class=\\\"hljs-string\\\">\\\"Something's wrong. It's a server side problem.\\\"</span>\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt; <span class=\\\"hljs-string\\\">\\\"Unknown error occurred. Code: \\\"</span> ^ string_of_int errorCode\\n  | <span class=\\\"hljs-type\\\">NoResult</span> =&gt; <span class=\\\"hljs-string\\\">\\\"Things look fine\\\"</span>\\n  };</code></pre>\\n      </div>\\n<h4 id=\\\"when-проверки\\\"><a href=\\\"#when-%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>When проверки</h4>\\n<p>Когда вам действительно нужно проверить некоторую логику внутри паттерна, вы можете\\nиспользовать <code>when</code>, который является синтаксическим сахаром для <code>if</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> message =\\n  <span class=\\\"hljs-keyword\\\">switch</span> data {\\n  | <span class=\\\"hljs-type\\\">GoodResult</span> theMessage =&gt; ...\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode when isServerError errorCode =&gt; ...\\n  | <span class=\\\"hljs-type\\\">BadResult</span> errorCode =&gt; ... <span class=\\\"hljs-comment\\\">/* otherwise */</span>\\n  | <span class=\\\"hljs-type\\\">NoResult</span> =&gt; ...\\n  };</code></pre>\\n      </div>\\n<h3 id=\\\"Советы-и-трюки\\\"><a href=\\\"#%D0%A1%D0%BE%D0%B2%D0%B5%D1%82%D1%8B-%D0%B8-%D1%82%D1%80%D1%8E%D0%BA%D0%B8\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Советы и трюки</h3>\\n<p><strong>Старайтесь по возможности держать список веток плоским</strong>. Пример ниже.</p>\\n<p>Не используйте <code>_</code> слишком часто. Этот способ не дает компилятору точно сказать, что\\nвы забыли проверить один из случаем. А это особенно ценно во время рефакторинга, когда вы\\nдобавляете новый элемент в вариант. Постарайтесь использовать <code>_</code> только для случаев с\\nбесконечными вариантами (строки, числа).</p>\\n<p>Вот серия примеров от худшего к лучшему:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt;\\n  <span class=\\\"hljs-keyword\\\">if</span> (opt == <span class=\\\"hljs-type\\\">None</span>) {\\n    <span class=\\\"hljs-type\\\">Js</span>.false_\\n  } <span class=\\\"hljs-keyword\\\">else</span> {\\n    <span class=\\\"hljs-keyword\\\">if</span> (opt == <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span>) {\\n      <span class=\\\"hljs-type\\\">Js</span>.true_\\n    } <span class=\\\"hljs-keyword\\\">else</span> {\\n      <span class=\\\"hljs-type\\\">Js</span>.false_\\n    }\\n  };</code></pre>\\n      </div>\\n<p>Это совсем глупо, лучше использовать паттерн-матчинг:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n| <span class=\\\"hljs-type\\\">Some</span> a =&gt; <span class=\\\"hljs-keyword\\\">switch</span> a {\\n  | <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n  | <span class=\\\"hljs-literal\\\">false</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n  }\\n};</code></pre>\\n      </div>\\n<p>Лучше, но все еще вложено.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">false</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>Вот теперь отлично!  И вы даже можете сделать так:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-number\\\">_</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>Так короче, но убивает проверку, о которой говорилось ранее. Такой вариант лучший:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">let</span> optionBoolToJsBoolean opt =&gt; <span class=\\\"hljs-keyword\\\">switch</span> opt {\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">true</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.true_\\n| <span class=\\\"hljs-type\\\">Some</span> <span class=\\\"hljs-literal\\\">false</span> | <span class=\\\"hljs-type\\\">None</span> =&gt; <span class=\\\"hljs-type\\\">Js</span>.false_\\n};</code></pre>\\n      </div>\\n<p>В таком коде намного сложнее сделать ошибку! Всегда старайтесь использовать такой подход\\nвместо if-else. Это более кратко и <a href=\\\"../../guide/language/variant#design-decisions\\\">более производительно</a>.</p>\\n<p>Посмотрите другой пример для кортежа <a href=\\\"../../guide/language/tuple#tips--tricks\\\">тут</a>.</p>\\n<h3 id=\\\"Проектные-решения\\\"><a href=\\\"#%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%BD%D1%8B%D0%B5-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D1%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Проектные решения</h3>\\n<p>The notorious <a href=\\\"https://en.wikipedia.org/wiki/Fizz_buzz#Programming_interviews\\\">fizzbuzz problem</a> strangely trips some people up, partially due its nature of paralyzing the programmer who hopes to simplify/unify the few condition branches in search of elegance where there's none. While fizzbuzz is slightly too dynamic to be solved in <code>when</code>-less switches, hopefully you can see that usually, pattern-matching's visual conciseness allows us to overcome decision paralysis, while keeping all the benefits (and more, as you've seen) of a bunch of brute-forced <code>if-else</code>s. There's really nothing wrong with explicitly listing out all the possibilities; Pattern matching corresponds to <strong>case analysis</strong> in math, a valid problem-solving technique that proves to be extremely convenient.</p>\\n<p>Using a Reason <code>switch</code> for the first time might make you feel like you've been missing out all these years. Careful, for it might ruin other languages for you =).</p>\\n<p>If you've tried to refactor a big, nested if-else logic, you might realize it's very hard to get the logic right. On the other hand, pattern matching + tuple conceptually maps to a 2D table, where each cell can be independently filled. This ensures that whenever you need to add a case in the <code>switch</code>, you can target that and only that table cell, without messing other cells up.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-keyword\\\">type</span> animal = <span class=\\\"hljs-type\\\">Dog</span> | <span class=\\\"hljs-type\\\">Cat</span> | <span class=\\\"hljs-type\\\">Bird</span>;\\n<span class=\\\"hljs-keyword\\\">let</span> result = <span class=\\\"hljs-keyword\\\">switch</span> (isBig, myAnimal) {\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Dog</span>) =&gt; <span class=\\\"hljs-number\\\">1</span>\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Cat</span>) =&gt; <span class=\\\"hljs-number\\\">2</span>\\n| (<span class=\\\"hljs-literal\\\">true</span>, <span class=\\\"hljs-type\\\">Bird</span>) =&gt; <span class=\\\"hljs-number\\\">3</span>\\n| (<span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-type\\\">Dog</span> | <span class=\\\"hljs-type\\\">Cat</span>) =&gt; <span class=\\\"hljs-number\\\">4</span>\\n| (<span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-type\\\">Bird</span>) =&gt; <span class=\\\"hljs-number\\\">5</span>\\n};</code></pre>\\n      </div>\\n<table>\\n<thead>\\n<tr>\\n<th>isBig \\\\ myAnimal</th>\\n<th>Dog</th>\\n<th>Cat</th>\\n<th>Bird</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>true</td>\\n<td>1</td>\\n<td>2</td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td>false</td>\\n<td>4</td>\\n<td>4</td>\\n<td>5</td>\\n</tr>\\n</tbody>\\n</table>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Паттерн-матчинг\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"section\": \"ru/guide\",\n\t\t\"sectionTitle\": \"Guide\",\n\t\t\"relativePath\": \"ru/guide/language/pattern-matching.md\",\n\t\t\"relatedFiles\": \"/^ru\\\\/guide\\\\/.*\\\\.md$/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ru-guide-language-pattern-matching.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/ru-guide-language-pattern-matching.json\n// module chunks = 24"],"sourceRoot":""}