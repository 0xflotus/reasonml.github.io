webpackJsonp([99],{"./node_modules/json-loader/index.js!./.cache/json/es-guide-what-and-why.json":function(e,a){e.exports={data:{allFile:{edges:[{node:{relativePath:"es/guide/examples.md",childMarkdownRemark:{frontmatter:{title:"Examples",order:60}}}},{node:{relativePath:"es/guide/index.md",childMarkdownRemark:{frontmatter:{title:"La Guia de Reason",order:0}}}},{node:{relativePath:"es/guide/what-and-why.md",childMarkdownRemark:{frontmatter:{title:"Que y Por que?",order:0}}}},{node:{relativePath:"es/guide/ocaml.md",childMarkdownRemark:{frontmatter:{title:"Comparison to OCaml",order:50}}}},{node:{relativePath:"es/guide/javascript/interop.md",childMarkdownRemark:{frontmatter:{title:"Interop",order:1}}}},{node:{relativePath:"es/guide/javascript/converting.md",childMarkdownRemark:{frontmatter:{title:"Converting from JS",order:5}}}},{node:{relativePath:"es/guide/javascript/index.md",childMarkdownRemark:{frontmatter:{title:"JavaScript",order:30}}}},{node:{relativePath:"es/guide/javascript/libraries.md",childMarkdownRemark:{frontmatter:{title:"Libraries",order:2}}}},{node:{relativePath:"es/guide/javascript/quickstart.md",childMarkdownRemark:{frontmatter:{title:"Guia Rapida",order:0}}}},{node:{relativePath:"es/guide/editor-tools/extra-goodies.md",childMarkdownRemark:{frontmatter:{title:"Extras",order:30}}}},{node:{relativePath:"es/guide/editor-tools/editors-plugins.md",childMarkdownRemark:{frontmatter:{title:"Plugines para Editores",order:20}}}},{node:{relativePath:"es/guide/javascript/syntax-cheatsheet.md",childMarkdownRemark:{frontmatter:{title:"Syntax Cheatsheet",order:1}}}},{node:{relativePath:"es/guide/editor-tools/global-installation.md",childMarkdownRemark:{frontmatter:{title:"Instalacion Global",order:10}}}},{node:{relativePath:"es/guide/editor-tools/index.md",childMarkdownRemark:{frontmatter:{title:"Configuracion del Editor",order:10}}}},{node:{relativePath:"es/guide/language/boolean.md",childMarkdownRemark:{frontmatter:{title:"Boolean",order:30}}}},{node:{relativePath:"es/guide/language/destructuring.md",childMarkdownRemark:{frontmatter:{title:"Destructuring",order:130}}}},{node:{relativePath:"es/guide/language/external.md",childMarkdownRemark:{frontmatter:{title:"External",order:170}}}},{node:{relativePath:"es/guide/language/if-else.md",childMarkdownRemark:{frontmatter:{title:"If-Else",order:110}}}},{node:{relativePath:"es/guide/language/imperative-loops.md",childMarkdownRemark:{frontmatter:{title:"Imperative Loops",order:150}}}},{node:{relativePath:"es/guide/language/index.md",childMarkdownRemark:{frontmatter:{title:"Introduccion al Lenguaje",order:20}}}},{node:{relativePath:"es/guide/language/function.md",childMarkdownRemark:{frontmatter:{title:"Function",order:100}}}},{node:{relativePath:"es/guide/language/integer-and-float.md",childMarkdownRemark:{frontmatter:{title:"Integer & Float",order:40}}}},{node:{relativePath:"es/guide/language/jsx.md",childMarkdownRemark:{frontmatter:{title:"JSX",order:160}}}},{node:{relativePath:"es/guide/language/exception.md",childMarkdownRemark:{frontmatter:{title:"Exception",order:175}}}},{node:{relativePath:"es/guide/language/list-and-array.md",childMarkdownRemark:{frontmatter:{title:"List & Array",order:80}}}},{node:{relativePath:"es/guide/language/let-binding.md",childMarkdownRemark:{frontmatter:{title:"Let Binding",order:10}}}},{node:{relativePath:"es/guide/language/module.md",childMarkdownRemark:{frontmatter:{title:"Module",order:180}}}},{node:{relativePath:"es/guide/language/more-on-type.md",childMarkdownRemark:{frontmatter:{title:"More on Type",order:120}}}},{node:{relativePath:"es/guide/language/mutation.md",childMarkdownRemark:{frontmatter:{title:"Mutation",order:140}}}},{node:{relativePath:"es/guide/language/object.md",childMarkdownRemark:{frontmatter:{title:"Object",order:175}}}},{node:{relativePath:"es/guide/language/overview.md",childMarkdownRemark:{frontmatter:{title:"Resumen",order:0}}}},{node:{relativePath:"es/guide/language/record.md",childMarkdownRemark:{frontmatter:{title:"Record",order:60}}}},{node:{relativePath:"es/guide/language/pattern-matching.md",childMarkdownRemark:{frontmatter:{title:"Pattern Matching!",order:135}}}},{node:{relativePath:"es/guide/language/string-and-char.md",childMarkdownRemark:{frontmatter:{title:"String & Char",order:20}}}},{node:{relativePath:"es/guide/language/type.md",childMarkdownRemark:{frontmatter:{title:"Type!",order:15}}}},{node:{relativePath:"es/guide/language/tuple.md",childMarkdownRemark:{frontmatter:{title:"Tuple",order:50}}}},{node:{relativePath:"es/guide/language/variant.md",childMarkdownRemark:{frontmatter:{title:"Variant!",order:70}}}},{node:{relativePath:"es/guide/native/convert-from-ocaml.md",childMarkdownRemark:{frontmatter:{title:"Converting from OCaml",order:4}}}},{node:{relativePath:"es/guide/native/quickstart.md",childMarkdownRemark:{frontmatter:{title:"Quickstart",order:0}}}},{node:{relativePath:"es/guide/native/index.md",childMarkdownRemark:{frontmatter:{title:"Native",order:40}}}}]},file:{relativePath:"es/guide/what-and-why.md",childMarkdownRemark:{html:'<h3 id="que-es-reason"><a href="#que-es-reason" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Que es Reason?</h3>\n<p>Reason no es un nuevo lenguaje; es una nueva sintaxis y set de herramientas hechas a partir de <a href="https://ocaml.org">OCaml</a>, un lenguaje maduro y puesto a prueba industrialmente. Reason le da a OCaml una sintaxis familiar inclinada a los programadores de JavaScript, y funciona con la misma metodologia de NPM/Yarn que ya conocen los mismos.</p>\n<p>En este aspecto, Reason podria ser casi considerado como un primo de JavaScript, mas simple, rapido y con tipo de datos estaticos, dejando de lado el historial problematico, y agregando las caracteristicas de ES2030 que puedes usar hoy mismo, y con acceso a el ecosistema de JS y OCaml!</p>\n<p>Reason compila a JavaScript gracias a nuestro proyecto acompanado, <a href="https://bucklescript.github.io/bucklescript/Manual.html">BuckleScript</a>, que compila OCaml/Reason a codigo legible en JavaScript con interoperaciones adecuadas. Ademas, Reason compila a codigo eficiente y rapido en assembly, gracias a OCaml.</p>\n<h3 id="por-que-reason"><a href="#por-que-reason" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Por que Reason?</h3>\n<blockquote>\n<p>"Porque tomarse la molestia de aprender <strong>completamente</strong> un nuevo lenguaje?"</p>\n</blockquote>\n<p>De esto no es lo que trata Reason.</p>\n<p>La realizacion de que el 80% de la semantica de OCaml (como funciona) se traduce sin problemas a JavaScript moderno y vice-versa*; si uno tiene el placer de dejar de lado algunas esquinas de JavaScript y agregar algunas pocas cosas, uno puede lograr algo que compile a un JS bastante legible y directamente usar el 80% de su ecosistema y herramientas. Ademas de esto, poder compilar a assembly, iOS, Android e incluso <a href="http://www.algo-prog.info/ocapic/web/index.php?id=ocapic">microcontroladores</a>!</p>\n<p>De todas maneras, es poco claro que caracteristicas de JS hay que modificar, en orden de encajar a un lenguaje con semanticas rapidas y con 100% de tipo de datos. Pero podemos trabjar <em>de atras para adelante</em>, a partir de un lenguaje con simpleza y velocidad como principios, y ajustarlo un poco para que sea una mejor parte de el lenguaje tan familiar de la web que todos conocemos.</p>\n<p>Todas estas decisiones han logrado que, para los usos comunes, la curva de aprendizaje de Reason no sea mucho mas alta que aprender JS + un sistema de tipo de datos gradualmente; a cambio uno tiene:</p>\n<ul>\n<li><strong>Excelente sistema de tipos de datos</strong>. Los tipo de datos de OCaml tienen 100% de cobertura (cada linea de codigo), inferencia (los tipos pueden ser deducidos y no es necesario declaralos manualmente), y correcto (una vez que compila, los tipos de datos estan garantizados de ser acertados).</li>\n<li><strong>Gusto para simplicidad y pragmatismo</strong>. Permitimos efectos secundarios, mutaciones y objetos por familiaridad y interoperaciones, mientras dejamos el resto del lenguaje puro, immutabilidad y functional.</li>\n<li><strong>Enfoque en alto rendimiento</strong>. El sitema de compliacion de Reason, <a href="http://bucklescript.github.io/bucklescript/Manual.html#_bucklescript_build_system_code_bsb_code"><code>bsb</code></a>, termina de compilar en menos de 100ms (de manera incremental).</li>\n<li><strong>Aprendizaje y conversion del codigo incremental</strong>. Conseguir los beneficios de un archivo tipeado desde el primer momento, <a href="/es/guide/javascript/interop">copia un poco de JavaScript dentro de tu archivo de Reason</a>.</li>\n<li><strong>Gran ecosistema y herramientas</strong>. Usa <a href="/es/guide/editor-tools/editors-plugins">tu editor de codigo favorito</a>, <a href="/es/guide/javascript/libraries">tu paquete favorito de NPM</a>, cualquiera de tu <a href="https://webpack.js.org">infrastructura</a> <a href="https://github.com/reasonml/reason-react">favorita</a> <a href="https://github.com/reasonml-community/bs-jest">existente</a> .</li>\n</ul>\n<p>* Dificl de creer? Mira nuestro <a href="/es/guide/javascript/syntax-cheatsheet">JS -> Reason guia de atajos</a> o proba un poco de Reason en <a href="/try/">el editor</a> y observa tu codigo compliado a la derecha!</p>\n<p><em>Reason es un proyecto open source comunitario de Facebook</em>.</p>',frontmatter:{title:"Que y Por que?"}}}},pathContext:{section:"es/guide",sectionTitle:"Guide",relativePath:"es/guide/what-and-why.md",relatedFiles:"/^es\\/guide\\/.*\\.md$/"}}}});
//# sourceMappingURL=path---es-guide-what-and-why-32bdf4ac88ded1d5b1d5.js.map