webpackJsonp([295],{"./node_modules/json-loader/index.js!./.cache/json/api-camlinternal-lazy-html.json":function(a,e){a.exports={data:{file:{relativePath:"api/CamlinternalLazy.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="CamlinternalFormatBasics.html" title="CamlinternalFormatBasics">Previous</a>\n&#xA0;<a class="up" href="index.html" title="Index">Up</a>\n&#xA0;<a class="post" href="CamlinternalMod.html" title="CamlinternalMod">Next</a>\n</div>\n<h1>Module <a href="type_CamlinternalLazy.html">CamlinternalLazy</a></h1>\n\n<pre><span class="keyword">module</span> CamlinternalLazy: sig .. end</pre><div class="info module top">\nRun-time support for lazy values.\n    All functions in this module are for system use only, not for the\n    casual user.<br>\n</div>\n<hr width="100%">\n\n<pre id="EXCEPTIONUndefined"><span class="keyword">exception</span> Undefined</pre>\n\n<pre id="VALforce_lazy_block">val force_lazy_block : &apos;a lazy_t -&gt; &apos;a</pre>\n<pre id="VALforce_val_lazy_block">val force_val_lazy_block : &apos;a lazy_t -&gt; &apos;a</pre>\n<pre id="VALforce">val force : &apos;a lazy_t -&gt; &apos;a</pre>\n<pre id="VALforce_val">val force_val : &apos;a lazy_t -&gt; &apos;a</pre></div>'}}},pathContext:{relativePath:"api/CamlinternalLazy.html"}}}});
//# sourceMappingURL=path---api-camlinternal-lazy-html-8ab81ae317377c03227c.js.map