webpackJsonp([243],{"./node_modules/json-loader/index.js!./.cache/json/api-more-labels-map-make-html.json":function(a,t){a.exports={data:{file:{relativePath:"api/MoreLabels.Map.Make.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar">&#xA0;<a class="up" href="MoreLabels.Map.html" title="MoreLabels.Map">Up</a>\n&#xA0;</div>\n<h1>Functor <a href="type_MoreLabels.Map.Make.html">MoreLabels.Map.Make</a></h1>\n\n<pre><span class="keyword">module</span> Make: functor (Ord : OrderedType) -&gt; S  with type key = Ord.t</pre><table border="0" cellpadding="3" width="100%">\n<tbody><tr>\n<td align="left" valign="top" width="1%%"><b>Parameters: </b></td>\n<td>\n<table class="paramstable">\n<tbody><tr>\n<td align="center" valign="top" width="15%">\n<code>Ord</code></td>\n<td align="center" valign="top">:</td>\n<td><code class="type">OrderedType</code>\n</td></tr></tbody></table>\n</td>\n</tr>\n</tbody></table>\n<hr width="100%">\n\n<pre id="TYPEkey"><span class="keyword">type</span> key </pre>\n\n\n<pre id="TYPEt"><span class="keyword">type</span> +&apos;a t </pre>\n\n\n<pre id="VALempty">val empty : &apos;a t</pre>\n<pre id="VALis_empty">val is_empty : &apos;a t -&gt; bool</pre>\n<pre id="VALmem">val mem : key -&gt; &apos;a t -&gt; bool</pre>\n<pre id="VALadd">val add : key:key -&gt;       data:&apos;a -&gt; &apos;a t -&gt; &apos;a t</pre>\n<pre id="VALsingleton">val singleton : key -&gt; &apos;a -&gt; &apos;a t</pre>\n<pre id="VALremove">val remove : key -&gt; &apos;a t -&gt; &apos;a t</pre>\n<pre id="VALmerge">val merge : f:(key -&gt; &apos;a option -&gt; &apos;b option -&gt; &apos;c option) -&gt;       &apos;a t -&gt; &apos;b t -&gt; &apos;c t</pre>\n<pre id="VALcompare">val compare : cmp:(&apos;a -&gt; &apos;a -&gt; int) -&gt;       &apos;a t -&gt; &apos;a t -&gt; int</pre>\n<pre id="VALequal">val equal : cmp:(&apos;a -&gt; &apos;a -&gt; bool) -&gt;       &apos;a t -&gt; &apos;a t -&gt; bool</pre>\n<pre id="VALiter">val iter : f:(key:key -&gt; data:&apos;a -&gt; unit) -&gt;       &apos;a t -&gt; unit</pre>\n<pre id="VALfold">val fold : f:(key:key -&gt; data:&apos;a -&gt; &apos;b -&gt; &apos;b) -&gt;       &apos;a t -&gt; init:&apos;b -&gt; &apos;b</pre>\n<pre id="VALfor_all">val for_all : f:(key -&gt; &apos;a -&gt; bool) -&gt; &apos;a t -&gt; bool</pre>\n<pre id="VALexists">val exists : f:(key -&gt; &apos;a -&gt; bool) -&gt; &apos;a t -&gt; bool</pre>\n<pre id="VALfilter">val filter : f:(key -&gt; &apos;a -&gt; bool) -&gt;       &apos;a t -&gt; &apos;a t</pre>\n<pre id="VALpartition">val partition : f:(key -&gt; &apos;a -&gt; bool) -&gt;       &apos;a t -&gt; &apos;a t * &apos;a t</pre>\n<pre id="VALcardinal">val cardinal : &apos;a t -&gt; int</pre>\n<pre id="VALbindings">val bindings : &apos;a t -&gt; (key * &apos;a) list</pre>\n<pre id="VALmin_binding">val min_binding : &apos;a t -&gt; key * &apos;a</pre>\n<pre id="VALmax_binding">val max_binding : &apos;a t -&gt; key * &apos;a</pre>\n<pre id="VALchoose">val choose : &apos;a t -&gt; key * &apos;a</pre>\n<pre id="VALsplit">val split : key -&gt;       &apos;a t -&gt;       &apos;a t * &apos;a option * &apos;a t</pre>\n<pre id="VALfind">val find : key -&gt; &apos;a t -&gt; &apos;a</pre>\n<pre id="VALmap">val map : f:(&apos;a -&gt; &apos;b) -&gt; &apos;a t -&gt; &apos;b t</pre>\n<pre id="VALmapi">val mapi : f:(key -&gt; &apos;a -&gt; &apos;b) -&gt;       &apos;a t -&gt; &apos;b t</pre></div>'}}},pathContext:{relativePath:"api/MoreLabels.Map.Make.html"}}}});
//# sourceMappingURL=path---api-more-labels-map-make-html-137ba96dd5a0f5ac1bb9.js.map