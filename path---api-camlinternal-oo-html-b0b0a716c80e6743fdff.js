webpackJsonp([293],{"./node_modules/json-loader/index.js!./.cache/json/api-camlinternal-oo-html.json":function(t,n){t.exports={data:{file:{relativePath:"api/CamlinternalOO.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="CamlinternalMod.html" title="CamlinternalMod">Previous</a>\n&#xA0;<a class="up" href="index.html" title="Index">Up</a>\n&#xA0;<a class="post" href="Char.html" title="Char">Next</a>\n</div>\n<h1>Module <a href="type_CamlinternalOO.html">CamlinternalOO</a></h1>\n\n<pre><span class="keyword">module</span> CamlinternalOO: sig .. end</pre><div class="info module top">\nRun-time support for objects and classes.\n    All functions in this module are for system use only, not for the\n    casual user.<br>\n</div>\n<hr width="100%">\n<br>\n<h6 id="6_Classes">Classes</h6><br>\n\n<pre id="TYPEtag"><span class="keyword">type</span> tag </pre>\n\n\n<pre id="TYPElabel"><span class="keyword">type</span> label </pre>\n\n\n<pre id="TYPEtable"><span class="keyword">type</span> table </pre>\n\n\n<pre id="TYPEmeth"><span class="keyword">type</span> meth </pre>\n\n\n<pre id="TYPEt"><span class="keyword">type</span> t </pre>\n\n\n<pre id="TYPEobj"><span class="keyword">type</span> obj </pre>\n\n\n<pre id="TYPEclosure"><span class="keyword">type</span> closure </pre>\n\n\n<pre id="VALpublic_method_label">val public_method_label : string -&gt; tag</pre>\n<pre id="VALnew_method">val new_method : table -&gt; label</pre>\n<pre id="VALnew_variable">val new_variable : table -&gt; string -&gt; int</pre>\n<pre id="VALnew_methods_variables">val new_methods_variables : table -&gt;       string array -&gt; string array -&gt; label array</pre>\n<pre id="VALget_variable">val get_variable : table -&gt; string -&gt; int</pre>\n<pre id="VALget_variables">val get_variables : table -&gt; string array -&gt; int array</pre>\n<pre id="VALget_method_label">val get_method_label : table -&gt; string -&gt; label</pre>\n<pre id="VALget_method_labels">val get_method_labels : table -&gt; string array -&gt; label array</pre>\n<pre id="VALget_method">val get_method : table -&gt; label -&gt; meth</pre>\n<pre id="VALset_method">val set_method : table -&gt; label -&gt; meth -&gt; unit</pre>\n<pre id="VALset_methods">val set_methods : table -&gt; label array -&gt; unit</pre>\n<pre id="VALnarrow">val narrow : table -&gt; string array -&gt; string array -&gt; string array -&gt; unit</pre>\n<pre id="VALwiden">val widen : table -&gt; unit</pre>\n<pre id="VALadd_initializer">val add_initializer : table -&gt; (obj -&gt; unit) -&gt; unit</pre>\n<pre id="VALdummy_table">val dummy_table : table</pre>\n<pre id="VALcreate_table">val create_table : string array -&gt; table</pre>\n<pre id="VALinit_class">val init_class : table -&gt; unit</pre>\n<pre id="VALinherits">val inherits : table -&gt;       string array -&gt;       string array -&gt;       string array -&gt;       t * (table -&gt; obj -&gt; Obj.t) *       t * obj -&gt; bool -&gt; Obj.t array</pre>\n<pre id="VALmake_class">val make_class : string array -&gt;       (table -&gt; Obj.t -&gt; t) -&gt;       t * (table -&gt; Obj.t -&gt; t) *       (Obj.t -&gt; t) * Obj.t</pre>\n<pre id="TYPEinit_table"><span class="keyword">type</span> init_table </pre>\n\n\n<pre id="VALmake_class_store">val make_class_store : string array -&gt;       (table -&gt; t) -&gt;       init_table -&gt; unit</pre>\n<pre id="VALdummy_class">val dummy_class : string * int * int -&gt;       t * (table -&gt; Obj.t -&gt; t) *       (Obj.t -&gt; t) * Obj.t</pre><br>\n<h6 id="6_Objects">Objects</h6><br>\n\n<pre id="VALcopy">val copy : (&lt; .. &gt; as &apos;a) -&gt; &apos;a</pre>\n<pre id="VALcreate_object">val create_object : table -&gt; obj</pre>\n<pre id="VALcreate_object_opt">val create_object_opt : obj -&gt; table -&gt; obj</pre>\n<pre id="VALrun_initializers">val run_initializers : obj -&gt; table -&gt; unit</pre>\n<pre id="VALrun_initializers_opt">val run_initializers_opt : obj -&gt;       obj -&gt; table -&gt; obj</pre>\n<pre id="VALcreate_object_and_run_initializers">val create_object_and_run_initializers : obj -&gt; table -&gt; obj</pre>\n<pre id="VALsend">val send : obj -&gt; tag -&gt; t</pre>\n<pre id="VALsendcache">val sendcache : obj -&gt;       tag -&gt; t -&gt; int -&gt; t</pre>\n<pre id="VALsendself">val sendself : obj -&gt; label -&gt; t</pre>\n<pre id="VALget_public_method">val get_public_method : obj -&gt; tag -&gt; closure</pre><br>\n<h6 id="6_Tablecache">Table cache</h6><br>\n\n<pre id="TYPEtables"><span class="keyword">type</span> tables </pre>\n\n\n<pre id="VALlookup_tables">val lookup_tables : tables -&gt;       closure array -&gt; tables</pre><br>\n<h6 id="6_Builtinstoreducecodesize">Builtins to reduce code size</h6><br>\n\n<pre><span class="keyword">type</span> impl = </pre><table class="typetable">\n<tbody><tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>GetConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>GetVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>GetEnv</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>GetMeth</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>SetVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppEnv</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppMeth</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppConstConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppConstVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppConstEnv</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppConstMeth</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppVarConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppEnvConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>AppMethConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>MethAppConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>MethAppVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>MethAppEnv</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>MethAppMeth</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>SendConst</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>SendVar</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>SendEnv</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>SendMeth</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>|</code></td>\n<td align="left" valign="top">\n<code>Closure of closure</code></td>\n\n</tr></tbody></table>\n\n\n<br>\n<h6 id="6_Parameters">Parameters</h6><br>\n\n<pre><span class="keyword">type</span> params = {</pre><table class="typetable">\n<tbody><tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>mutable&#xA0;compact_table&#xA0;: bool;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>mutable&#xA0;copy_parent&#xA0;: bool;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>mutable&#xA0;clean_when_copying&#xA0;: bool;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>mutable&#xA0;retry_count&#xA0;: int;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>mutable&#xA0;bucket_small_size&#xA0;: int;</code></td>\n\n</tr></tbody></table>\n}\n\n\n\n<pre id="VALparams">val params : params</pre><br>\n<h6 id="6_Statistics">Statistics</h6><br>\n\n<pre><span class="keyword">type</span> stats = {</pre><table class="typetable">\n<tbody><tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>classes&#xA0;: int;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>methods&#xA0;: int;</code></td>\n\n</tr>\n<tr>\n<td align="left" valign="top">\n<code>&#xA0;&#xA0;</code></td>\n<td align="left" valign="top">\n<code>inst_vars&#xA0;: int;</code></td>\n\n</tr></tbody></table>\n}\n\n\n\n<pre id="VALstats">val stats : unit -&gt; stats</pre></div>'}}},pathContext:{relativePath:"api/CamlinternalOO.html"}}}});
//# sourceMappingURL=path---api-camlinternal-oo-html-b0b0a716c80e6743fdff.js.map