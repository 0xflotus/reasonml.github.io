webpackJsonp([136],{"./node_modules/json-loader/index.js!./.cache/json/es-guide-editor-tools-extra-goodies.json":function(e,a){e.exports={data:{allFile:{edges:[{node:{relativePath:"es/guide/examples.md",childMarkdownRemark:{frontmatter:{title:"Examples",order:60}}}},{node:{relativePath:"es/guide/index.md",childMarkdownRemark:{frontmatter:{title:"La Guia de Reason",order:0}}}},{node:{relativePath:"es/guide/what-and-why.md",childMarkdownRemark:{frontmatter:{title:"Que y Por que?",order:0}}}},{node:{relativePath:"es/guide/ocaml.md",childMarkdownRemark:{frontmatter:{title:"Comparison to OCaml",order:50}}}},{node:{relativePath:"es/guide/editor-tools/extra-goodies.md",childMarkdownRemark:{frontmatter:{title:"Extras",order:30}}}},{node:{relativePath:"es/guide/editor-tools/index.md",childMarkdownRemark:{frontmatter:{title:"Configuracion del Editor",order:10}}}},{node:{relativePath:"es/guide/editor-tools/editors-plugins.md",childMarkdownRemark:{frontmatter:{title:"Plugines para Editores",order:20}}}},{node:{relativePath:"es/guide/editor-tools/global-installation.md",childMarkdownRemark:{frontmatter:{title:"Instalacion Global",order:10}}}},{node:{relativePath:"es/guide/language/boolean.md",childMarkdownRemark:{frontmatter:{title:"Boolean",order:30}}}},{node:{relativePath:"es/guide/language/destructuring.md",childMarkdownRemark:{frontmatter:{title:"Destructuring",order:130}}}},{node:{relativePath:"es/guide/language/exception.md",childMarkdownRemark:{frontmatter:{title:"Exception",order:175}}}},{node:{relativePath:"es/guide/language/function.md",childMarkdownRemark:{frontmatter:{title:"Function",order:100}}}},{node:{relativePath:"es/guide/language/external.md",childMarkdownRemark:{frontmatter:{title:"External",order:170}}}},{node:{relativePath:"es/guide/language/if-else.md",childMarkdownRemark:{frontmatter:{title:"If-Else",order:110}}}},{node:{relativePath:"es/guide/language/imperative-loops.md",childMarkdownRemark:{frontmatter:{title:"Imperative Loops",order:150}}}},{node:{relativePath:"es/guide/language/integer-and-float.md",childMarkdownRemark:{frontmatter:{title:"Integer & Float",order:40}}}},{node:{relativePath:"es/guide/language/index.md",childMarkdownRemark:{frontmatter:{title:"Introduccion al Lenguaje",order:20}}}},{node:{relativePath:"es/guide/language/jsx.md",childMarkdownRemark:{frontmatter:{title:"JSX",order:160}}}},{node:{relativePath:"es/guide/language/let-binding.md",childMarkdownRemark:{frontmatter:{title:"Let Binding",order:10}}}},{node:{relativePath:"es/guide/language/list-and-array.md",childMarkdownRemark:{frontmatter:{title:"List & Array",order:80}}}},{node:{relativePath:"es/guide/language/more-on-type.md",childMarkdownRemark:{frontmatter:{title:"More on Type",order:120}}}},{node:{relativePath:"es/guide/language/module.md",childMarkdownRemark:{frontmatter:{title:"Module",order:180}}}},{node:{relativePath:"es/guide/language/overview.md",childMarkdownRemark:{frontmatter:{title:"Resumen",order:0}}}},{node:{relativePath:"es/guide/language/pattern-matching.md",childMarkdownRemark:{frontmatter:{title:"Pattern Matching!",order:135}}}},{node:{relativePath:"es/guide/language/record.md",childMarkdownRemark:{frontmatter:{title:"Record",order:60}}}},{node:{relativePath:"es/guide/language/string-and-char.md",childMarkdownRemark:{frontmatter:{title:"String & Char",order:20}}}},{node:{relativePath:"es/guide/language/tuple.md",childMarkdownRemark:{frontmatter:{title:"Tuple",order:50}}}},{node:{relativePath:"es/guide/language/type.md",childMarkdownRemark:{frontmatter:{title:"Type!",order:15}}}},{node:{relativePath:"es/guide/language/variant.md",childMarkdownRemark:{frontmatter:{title:"Variant!",order:70}}}},{node:{relativePath:"es/guide/native/convert-from-ocaml.md",childMarkdownRemark:{frontmatter:{title:"Converting from OCaml",order:4}}}},{node:{relativePath:"es/guide/native/quickstart.md",childMarkdownRemark:{frontmatter:{title:"Quickstart",order:0}}}},{node:{relativePath:"es/guide/native/index.md",childMarkdownRemark:{frontmatter:{title:"Native",order:40}}}},{node:{relativePath:"es/guide/javascript/index.md",childMarkdownRemark:{frontmatter:{title:"JavaScript",order:30}}}},{node:{relativePath:"es/guide/language/mutation.md",childMarkdownRemark:{frontmatter:{title:"Mutation",order:140}}}},{node:{relativePath:"es/guide/javascript/interop.md",childMarkdownRemark:{frontmatter:{title:"Interop",order:1}}}},{node:{relativePath:"es/guide/language/object.md",childMarkdownRemark:{frontmatter:{title:"Object",order:175}}}},{node:{relativePath:"es/guide/javascript/converting.md",childMarkdownRemark:{frontmatter:{title:"Converting from JS",order:5}}}},{node:{relativePath:"es/guide/javascript/libraries.md",childMarkdownRemark:{frontmatter:{title:"Libraries",order:2}}}},{node:{relativePath:"es/guide/javascript/syntax-cheatsheet.md",childMarkdownRemark:{frontmatter:{title:"Syntax Cheatsheet",order:1}}}},{node:{relativePath:"es/guide/javascript/quickstart.md",childMarkdownRemark:{frontmatter:{title:"Guia Rapida",order:0}}}}]},file:{relativePath:"es/guide/editor-tools/extra-goodies.md",childMarkdownRemark:{html:'<h3 id="extensiones-del-navegador-reason-tools"><a href="#extensiones-del-navegador-reason-tools" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Extensiones del Navegador: Reason-tools</h3>\n<p><a href="https://github.com/reasonml/reason-tools">Reason-tools</a> te permite intercambiar entre sintaxis de OCaml y Reason cuando estas leyendo tutoriales o docuemntacion que este en cualquiera de los dos lenguajes.</p>\n<h3 id="bucklescript"><a href="#bucklescript" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>BuckleScript</h3>\n<p>Vamos a ver <a href="http://bucklescript.github.io/bucklescript/Manual.html">BuckleScript</a> extensivamente durante el resto de la documentacion, dado que es el motor que compila nuestro Javascript. Los binarios globales se instalan mediante  <code>npm install -g bs-platform</code>.</p>\n<h3 id="otras-utilidades"><a href="#otras-utilidades" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Otras Utilidades</h3>\n<p>The global installation you\'ve done in the <a href="/guide/editor-tools/global-installation">past section</a> comes with a few extra useful tools, described here.\nLa instalacion global que has usado en la <a href="/guide/editor-tools/global-installation">seccion anterior</a> viene con  algunas herramientas de mas, explicadas aca.</p>\n<h4 id="refmt"><a href="#refmt" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Refmt</h4>\n<p><code>refmt</code> ("Reason format") es el binario que provee el formateo automatico al editor de codigo. Toma tu codigo y lo devuelve formateado. Tambien sirve para convertir la sintaxis de Reason a OCaml y de vuelta. La comunidad de Reason lo usa para conseguir consistencia del estilo de codigo en todos los proyectos, y evitar el trabajo manual y los debates de estilo. Asi lo demostramos en Vim:</p>\n<img src="https://user-images.githubusercontent.com/1909539/28570942-3bd962a2-70f5-11e7-8934-1b7f249d7814.gif">\n<p>Formatea el codigo basandose en el ancho del editor (para demostrar un punto). En otras palabras, no pasa a a siguiente linea en cierta cantidad de caracteres; arregla automaticamente el limite de acorde a tu codigo.</p>\n<p><code>refmt</code> can be used directly in the terminal. For example, to format your code outside of the editor, do <code>refmt --in-place myFile.re</code>. <strong>See <code>refmt --help</code> for all the options</strong>.\n<code>refmt</code> puede ser usado directamente en el terminal. Por ejemplo, para formatear tu codigo afuera del editor, ejecuta  <code>refmt --in-place myFile.re</code>. <strong>Usa <code>refmt --help</code> para todas las opciones</strong>.</p>\n<h4 id="merlin"><a href="#merlin" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Merlin</h4>\n<p><a href="https://github.com/ocaml/merlin">Merlin</a> es el motor que proporciona, tipos de datos, refactor, errores en tiempo real, saltar a la definicion, etc. para nuestro editor. El binario se llama <code>ocamlmerlin</code>, aunque no necesitas llamarlo manualmente (los editores lo ejecutan automaticamente).</p>\n<p>Para configurar Merlin para que entienda tu proyecto, tendrias que escribir un archivo  <code>.merlin</code> en la raiz del proyecto ( <a href="https://github.com/ocaml/merlin/wiki/project-configuration">docuentacion</a>). <strong>Para el uso en JS, esta configuracion es generada para vos automaticamente por BuckleScript.</strong></p>\n<h4 id="repl"><a href="#repl" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>REPL</h4>\n<p>Reason viene con un REPL llamado <code>rtop</code> que, una vez invocado, te deja evaluar tu codigo interactivamente. Proporciona autocompletacion inteligente, usando los tipos de datos.</p>\n<img src="https://user-images.githubusercontent.com/1909539/28570943-3bd9eb00-70f5-11e7-981c-4846719c0943.gif">\n<p>Ejecuta <code>#quit;</code> para terminar la sesion.</p>\n<p><strong>Note that <code>rtop</code> currently doesn\'t work easily with packages and <code>external</code>s</strong>. We recommend evaluating code inside our <a href="/try">Try</a> playground.\n<strong>Ten en cuenta que <code>rtop</code> no funciona bien con paquetes y <code>external</code></strong>. Recomendamos evaluar codigo dentro de nuestro editor interactivo <a href="/try">Try</a>.</p>\n<h4 id="ocamlc-ocamlopt-ocamlrun-rebuild"><a href="#ocamlc-ocamlopt-ocamlrun-rebuild" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ocamlc, ocamlopt, ocamlrun, rebuild</h4>\n<p><code>ocamlc</code> y <code>ocamlopt</code> son los compiladores de OCaml.</p>',frontmatter:{title:"Extras"}}}},pathContext:{section:"es/guide",sectionTitle:"Guide",relativePath:"es/guide/editor-tools/extra-goodies.md",relatedFiles:"/^es\\/guide\\/.*\\.md$/"}}}});
//# sourceMappingURL=path---es-guide-editor-tools-extra-goodies-34d5d08aa3b6eb583484.js.map