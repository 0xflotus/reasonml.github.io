{"version":3,"sources":["webpack:///path---api-more-labels-set-make-html-cf5a0afab801c0461e14.js","webpack:///./.cache/json/api-more-labels-set-make-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-more-labels-set-make-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,uFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,+BACAC,cACAC,QAAA,ywGAIAC,aACAH,aAAA","file":"path---api-more-labels-set-make-html-cf5a0afab801c0461e14.js","sourcesContent":["webpackJsonp([237],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-more-labels-set-make-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/MoreLabels.Set.Make.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"MoreLabels.Set.html\\\" title=\\\"MoreLabels.Set\\\">Up</a>\\n&#xA0;</div>\\n<h1>Functor <a href=\\\"type_MoreLabels.Set.Make.html\\\">MoreLabels.Set.Make</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Make: (Ord: OrderedType) =&gt; S with type elt = Ord.t;\\n</pre><table border=\\\"0\\\" cellpadding=\\\"3\\\" width=\\\"100%\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\" width=\\\"1%%\\\"><b>Parameters: </b></td>\\n<td>\\n<table class=\\\"paramstable\\\">\\n<tbody><tr>\\n<td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"15%\\\">\\n<code>Ord</code></td>\\n<td align=\\\"center\\\" valign=\\\"top\\\">:</td>\\n<td><code class=\\\"type\\\">OrderedType</code>\\n</td></tr></tbody></table>\\n</td>\\n</tr>\\n</tbody></table>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEelt\\\"><span class=\\\"keyword\\\">type</span> elt;\\n</pre>\\n\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> t;\\n</pre>\\n\\n\\n<pre id=\\\"VALempty\\\"><span class=\\\"keyword\\\">let</span> empty: t;\\n</pre>\\n<pre id=\\\"VALis_empty\\\"><span class=\\\"keyword\\\">let</span> is_empty: t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALmem\\\"><span class=\\\"keyword\\\">let</span> mem: elt =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALadd\\\"><span class=\\\"keyword\\\">let</span> add: elt =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALsingleton\\\"><span class=\\\"keyword\\\">let</span> singleton: elt =&gt; t;\\n</pre>\\n<pre id=\\\"VALremove\\\"><span class=\\\"keyword\\\">let</span> remove: elt =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALunion\\\"><span class=\\\"keyword\\\">let</span> union: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALinter\\\"><span class=\\\"keyword\\\">let</span> inter: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALdiff\\\"><span class=\\\"keyword\\\">let</span> diff: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALcompare\\\"><span class=\\\"keyword\\\">let</span> compare: t =&gt; t =&gt; int;\\n</pre>\\n<pre id=\\\"VALequal\\\"><span class=\\\"keyword\\\">let</span> equal: t =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALsubset\\\"><span class=\\\"keyword\\\">let</span> subset: t =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALiter\\\"><span class=\\\"keyword\\\">let</span> iter: f::(elt =&gt; unit) =&gt; t =&gt; unit;\\n</pre>\\n<pre id=\\\"VALfold\\\"><span class=\\\"keyword\\\">let</span> fold: f::(elt =&gt; &apos;a =&gt; &apos;a) =&gt; t =&gt; init::&apos;a =&gt; &apos;a;\\n</pre>\\n<pre id=\\\"VALfor_all\\\"><span class=\\\"keyword\\\">let</span> for_all: f::(elt =&gt; bool) =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALexists\\\"><span class=\\\"keyword\\\">let</span> exists: f::(elt =&gt; bool) =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALfilter\\\"><span class=\\\"keyword\\\">let</span> filter: f::(elt =&gt; bool) =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALpartition\\\"><span class=\\\"keyword\\\">let</span> partition: f::(elt =&gt; bool) =&gt; t =&gt; (t, t);\\n</pre>\\n<pre id=\\\"VALcardinal\\\"><span class=\\\"keyword\\\">let</span> cardinal: t =&gt; int;\\n</pre>\\n<pre id=\\\"VALelements\\\"><span class=\\\"keyword\\\">let</span> elements: t =&gt; list elt;\\n</pre>\\n<pre id=\\\"VALmin_elt\\\"><span class=\\\"keyword\\\">let</span> min_elt: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALmax_elt\\\"><span class=\\\"keyword\\\">let</span> max_elt: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALchoose\\\"><span class=\\\"keyword\\\">let</span> choose: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALsplit\\\"><span class=\\\"keyword\\\">let</span> split: elt =&gt; t =&gt; (t, bool, t);\\n</pre>\\n<pre id=\\\"VALfind\\\"><span class=\\\"keyword\\\">let</span> find: elt =&gt; t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALof_list\\\"><span class=\\\"keyword\\\">let</span> of_list: list elt =&gt; t;\\n</pre></div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/MoreLabels.Set.Make.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-more-labels-set-make-html-cf5a0afab801c0461e14.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/MoreLabels.Set.Make.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"MoreLabels.Set.html\\\" title=\\\"MoreLabels.Set\\\">Up</a>\\n&#xA0;</div>\\n<h1>Functor <a href=\\\"type_MoreLabels.Set.Make.html\\\">MoreLabels.Set.Make</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Make: (Ord: OrderedType) =&gt; S with type elt = Ord.t;\\n</pre><table border=\\\"0\\\" cellpadding=\\\"3\\\" width=\\\"100%\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\" width=\\\"1%%\\\"><b>Parameters: </b></td>\\n<td>\\n<table class=\\\"paramstable\\\">\\n<tbody><tr>\\n<td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"15%\\\">\\n<code>Ord</code></td>\\n<td align=\\\"center\\\" valign=\\\"top\\\">:</td>\\n<td><code class=\\\"type\\\">OrderedType</code>\\n</td></tr></tbody></table>\\n</td>\\n</tr>\\n</tbody></table>\\n<hr width=\\\"100%\\\">\\n\\n<pre id=\\\"TYPEelt\\\"><span class=\\\"keyword\\\">type</span> elt;\\n</pre>\\n\\n\\n<pre id=\\\"TYPEt\\\"><span class=\\\"keyword\\\">type</span> t;\\n</pre>\\n\\n\\n<pre id=\\\"VALempty\\\"><span class=\\\"keyword\\\">let</span> empty: t;\\n</pre>\\n<pre id=\\\"VALis_empty\\\"><span class=\\\"keyword\\\">let</span> is_empty: t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALmem\\\"><span class=\\\"keyword\\\">let</span> mem: elt =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALadd\\\"><span class=\\\"keyword\\\">let</span> add: elt =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALsingleton\\\"><span class=\\\"keyword\\\">let</span> singleton: elt =&gt; t;\\n</pre>\\n<pre id=\\\"VALremove\\\"><span class=\\\"keyword\\\">let</span> remove: elt =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALunion\\\"><span class=\\\"keyword\\\">let</span> union: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALinter\\\"><span class=\\\"keyword\\\">let</span> inter: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALdiff\\\"><span class=\\\"keyword\\\">let</span> diff: t =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALcompare\\\"><span class=\\\"keyword\\\">let</span> compare: t =&gt; t =&gt; int;\\n</pre>\\n<pre id=\\\"VALequal\\\"><span class=\\\"keyword\\\">let</span> equal: t =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALsubset\\\"><span class=\\\"keyword\\\">let</span> subset: t =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALiter\\\"><span class=\\\"keyword\\\">let</span> iter: f::(elt =&gt; unit) =&gt; t =&gt; unit;\\n</pre>\\n<pre id=\\\"VALfold\\\"><span class=\\\"keyword\\\">let</span> fold: f::(elt =&gt; &apos;a =&gt; &apos;a) =&gt; t =&gt; init::&apos;a =&gt; &apos;a;\\n</pre>\\n<pre id=\\\"VALfor_all\\\"><span class=\\\"keyword\\\">let</span> for_all: f::(elt =&gt; bool) =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALexists\\\"><span class=\\\"keyword\\\">let</span> exists: f::(elt =&gt; bool) =&gt; t =&gt; bool;\\n</pre>\\n<pre id=\\\"VALfilter\\\"><span class=\\\"keyword\\\">let</span> filter: f::(elt =&gt; bool) =&gt; t =&gt; t;\\n</pre>\\n<pre id=\\\"VALpartition\\\"><span class=\\\"keyword\\\">let</span> partition: f::(elt =&gt; bool) =&gt; t =&gt; (t, t);\\n</pre>\\n<pre id=\\\"VALcardinal\\\"><span class=\\\"keyword\\\">let</span> cardinal: t =&gt; int;\\n</pre>\\n<pre id=\\\"VALelements\\\"><span class=\\\"keyword\\\">let</span> elements: t =&gt; list elt;\\n</pre>\\n<pre id=\\\"VALmin_elt\\\"><span class=\\\"keyword\\\">let</span> min_elt: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALmax_elt\\\"><span class=\\\"keyword\\\">let</span> max_elt: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALchoose\\\"><span class=\\\"keyword\\\">let</span> choose: t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALsplit\\\"><span class=\\\"keyword\\\">let</span> split: elt =&gt; t =&gt; (t, bool, t);\\n</pre>\\n<pre id=\\\"VALfind\\\"><span class=\\\"keyword\\\">let</span> find: elt =&gt; t =&gt; elt;\\n</pre>\\n<pre id=\\\"VALof_list\\\"><span class=\\\"keyword\\\">let</span> of_list: list elt =&gt; t;\\n</pre></div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/MoreLabels.Set.Make.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-more-labels-set-make-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-more-labels-set-make-html.json\n// module chunks = 237"],"sourceRoot":""}